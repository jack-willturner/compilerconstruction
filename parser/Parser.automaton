State 0:
top' -> . top [ # ]
-- On STRING shift to state 1
-- On top shift to state 75
-- On separated_nonempty_list(FULLSTOP,fundef) shift to state 76
-- On loption(separated_nonempty_list(FULLSTOP,fundef)) shift to state 77
-- On fundef shift to state 79
-- On EOF reduce production loption(separated_nonempty_list(FULLSTOP,fundef)) -> 

State 1:
fundef -> STRING . LPAREN loption(separated_nonempty_list(COMMA,STRING)) RPAREN COLON exp [ FULLSTOP EOF ]
-- On LPAREN shift to state 2

State 2:
fundef -> STRING LPAREN . loption(separated_nonempty_list(COMMA,STRING)) RPAREN COLON exp [ FULLSTOP EOF ]
-- On STRING shift to state 3
-- On separated_nonempty_list(COMMA,STRING) shift to state 6
-- On loption(separated_nonempty_list(COMMA,STRING)) shift to state 7
-- On RPAREN reduce production loption(separated_nonempty_list(COMMA,STRING)) -> 

State 3:
separated_nonempty_list(COMMA,STRING) -> STRING . [ RPAREN ]
separated_nonempty_list(COMMA,STRING) -> STRING . COMMA separated_nonempty_list(COMMA,STRING) [ RPAREN ]
-- On COMMA shift to state 4
-- On RPAREN reduce production separated_nonempty_list(COMMA,STRING) -> STRING 

State 4:
separated_nonempty_list(COMMA,STRING) -> STRING COMMA . separated_nonempty_list(COMMA,STRING) [ RPAREN ]
-- On STRING shift to state 3
-- On separated_nonempty_list(COMMA,STRING) shift to state 5

State 5:
separated_nonempty_list(COMMA,STRING) -> STRING COMMA separated_nonempty_list(COMMA,STRING) . [ RPAREN ]
-- On RPAREN reduce production separated_nonempty_list(COMMA,STRING) -> STRING COMMA separated_nonempty_list(COMMA,STRING) 

State 6:
loption(separated_nonempty_list(COMMA,STRING)) -> separated_nonempty_list(COMMA,STRING) . [ RPAREN ]
-- On RPAREN reduce production loption(separated_nonempty_list(COMMA,STRING)) -> separated_nonempty_list(COMMA,STRING) 

State 7:
fundef -> STRING LPAREN loption(separated_nonempty_list(COMMA,STRING)) . RPAREN COLON exp [ FULLSTOP EOF ]
-- On RPAREN shift to state 8

State 8:
fundef -> STRING LPAREN loption(separated_nonempty_list(COMMA,STRING)) RPAREN . COLON exp [ FULLSTOP EOF ]
-- On COLON shift to state 9

State 9:
fundef -> STRING LPAREN loption(separated_nonempty_list(COMMA,STRING)) RPAREN COLON . exp [ FULLSTOP EOF ]
-- On WHILE shift to state 10
-- On STRING shift to state 12
-- On READINT shift to state 13
-- On PRINTINT shift to state 14
-- On NOT shift to state 15
-- On NEW shift to state 16
-- On LPAREN shift to state 11
-- On LET shift to state 19
-- On INT shift to state 22
-- On IF shift to state 23
-- On EXCLAMATION shift to state 26
-- On params shift to state 27
-- On exp shift to state 74

State 10:
exp -> WHILE . params LBRACE exp RBRACE [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
-- On LPAREN shift to state 11
-- On params shift to state 70

State 11:
params -> LPAREN . exp RPAREN [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ LBRACE GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
-- On WHILE shift to state 10
-- On STRING shift to state 12
-- On READINT shift to state 13
-- On PRINTINT shift to state 14
-- On NOT shift to state 15
-- On NEW shift to state 16
-- On LPAREN shift to state 11
-- On LET shift to state 19
-- On INT shift to state 22
-- On IF shift to state 23
-- On EXCLAMATION shift to state 26
-- On params shift to state 27
-- On exp shift to state 68

State 12:
exp -> STRING . [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
-- On TIMES reduce production exp -> STRING 
-- On SEMIC reduce production exp -> STRING 
-- On RPAREN reduce production exp -> STRING 
-- On RBRACE reduce production exp -> STRING 
-- On PLUS reduce production exp -> STRING 
-- On OR reduce production exp -> STRING 
-- On NOTEQUAL reduce production exp -> STRING 
-- On MINUS reduce production exp -> STRING 
-- On LPAREN reduce production exp -> STRING 
-- On LEQ reduce production exp -> STRING 
-- On GEQ reduce production exp -> STRING 
-- On FULLSTOP reduce production exp -> STRING 
-- On EQUAL reduce production exp -> STRING 
-- On EOF reduce production exp -> STRING 
-- On DIV reduce production exp -> STRING 
-- On ASSIGN reduce production exp -> STRING 
-- On AND reduce production exp -> STRING 

State 13:
exp -> READINT . [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
-- On TIMES reduce production exp -> READINT 
-- On SEMIC reduce production exp -> READINT 
-- On RPAREN reduce production exp -> READINT 
-- On RBRACE reduce production exp -> READINT 
-- On PLUS reduce production exp -> READINT 
-- On OR reduce production exp -> READINT 
-- On NOTEQUAL reduce production exp -> READINT 
-- On MINUS reduce production exp -> READINT 
-- On LPAREN reduce production exp -> READINT 
-- On LEQ reduce production exp -> READINT 
-- On GEQ reduce production exp -> READINT 
-- On FULLSTOP reduce production exp -> READINT 
-- On EQUAL reduce production exp -> READINT 
-- On EOF reduce production exp -> READINT 
-- On DIV reduce production exp -> READINT 
-- On ASSIGN reduce production exp -> READINT 
-- On AND reduce production exp -> READINT 

State 14:
exp -> PRINTINT . exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
-- On WHILE shift to state 10
-- On STRING shift to state 12
-- On READINT shift to state 13
-- On PRINTINT shift to state 14
-- On NOT shift to state 15
-- On NEW shift to state 16
-- On LPAREN shift to state 11
-- On LET shift to state 19
-- On INT shift to state 22
-- On IF shift to state 23
-- On EXCLAMATION shift to state 26
-- On params shift to state 27
-- On exp shift to state 67

State 15:
exp -> NOT . exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
-- On WHILE shift to state 10
-- On STRING shift to state 12
-- On READINT shift to state 13
-- On PRINTINT shift to state 14
-- On NOT shift to state 15
-- On NEW shift to state 16
-- On LPAREN shift to state 11
-- On LET shift to state 19
-- On INT shift to state 22
-- On IF shift to state 23
-- On EXCLAMATION shift to state 26
-- On params shift to state 27
-- On exp shift to state 66

State 16:
exp -> NEW . STRING ASSIGN exp SEMIC exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
-- On STRING shift to state 17

State 17:
exp -> NEW STRING . ASSIGN exp SEMIC exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
-- On ASSIGN shift to state 18

State 18:
exp -> NEW STRING ASSIGN . exp SEMIC exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
-- On WHILE shift to state 10
-- On STRING shift to state 12
-- On READINT shift to state 13
-- On PRINTINT shift to state 14
-- On NOT shift to state 15
-- On NEW shift to state 16
-- On LPAREN shift to state 11
-- On LET shift to state 19
-- On INT shift to state 22
-- On IF shift to state 23
-- On EXCLAMATION shift to state 26
-- On params shift to state 27
-- On exp shift to state 63

State 19:
exp -> LET . STRING ASSIGN exp SEMIC exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
-- On STRING shift to state 20

State 20:
exp -> LET STRING . ASSIGN exp SEMIC exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
-- On ASSIGN shift to state 21

State 21:
exp -> LET STRING ASSIGN . exp SEMIC exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
-- On WHILE shift to state 10
-- On STRING shift to state 12
-- On READINT shift to state 13
-- On PRINTINT shift to state 14
-- On NOT shift to state 15
-- On NEW shift to state 16
-- On LPAREN shift to state 11
-- On LET shift to state 19
-- On INT shift to state 22
-- On IF shift to state 23
-- On EXCLAMATION shift to state 26
-- On params shift to state 27
-- On exp shift to state 60

State 22:
exp -> INT . [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
-- On TIMES reduce production exp -> INT 
-- On SEMIC reduce production exp -> INT 
-- On RPAREN reduce production exp -> INT 
-- On RBRACE reduce production exp -> INT 
-- On PLUS reduce production exp -> INT 
-- On OR reduce production exp -> INT 
-- On NOTEQUAL reduce production exp -> INT 
-- On MINUS reduce production exp -> INT 
-- On LPAREN reduce production exp -> INT 
-- On LEQ reduce production exp -> INT 
-- On GEQ reduce production exp -> INT 
-- On FULLSTOP reduce production exp -> INT 
-- On EQUAL reduce production exp -> INT 
-- On EOF reduce production exp -> INT 
-- On DIV reduce production exp -> INT 
-- On ASSIGN reduce production exp -> INT 
-- On AND reduce production exp -> INT 

State 23:
exp -> IF . params LBRACE exp RBRACE ELSE LBRACE exp RBRACE [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
-- On LPAREN shift to state 11
-- On params shift to state 24

State 24:
exp -> IF params . LBRACE exp RBRACE ELSE LBRACE exp RBRACE [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
-- On LBRACE shift to state 25

State 25:
exp -> IF params LBRACE . exp RBRACE ELSE LBRACE exp RBRACE [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
-- On WHILE shift to state 10
-- On STRING shift to state 12
-- On READINT shift to state 13
-- On PRINTINT shift to state 14
-- On NOT shift to state 15
-- On NEW shift to state 16
-- On LPAREN shift to state 11
-- On LET shift to state 19
-- On INT shift to state 22
-- On IF shift to state 23
-- On EXCLAMATION shift to state 26
-- On params shift to state 27
-- On exp shift to state 30

State 26:
exp -> EXCLAMATION . exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
-- On WHILE shift to state 10
-- On STRING shift to state 12
-- On READINT shift to state 13
-- On PRINTINT shift to state 14
-- On NOT shift to state 15
-- On NEW shift to state 16
-- On LPAREN shift to state 11
-- On LET shift to state 19
-- On INT shift to state 22
-- On IF shift to state 23
-- On EXCLAMATION shift to state 26
-- On params shift to state 27
-- On exp shift to state 28

State 27:
exp -> params . [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
-- On TIMES reduce production exp -> params 
-- On SEMIC reduce production exp -> params 
-- On RPAREN reduce production exp -> params 
-- On RBRACE reduce production exp -> params 
-- On PLUS reduce production exp -> params 
-- On OR reduce production exp -> params 
-- On NOTEQUAL reduce production exp -> params 
-- On MINUS reduce production exp -> params 
-- On LPAREN reduce production exp -> params 
-- On LEQ reduce production exp -> params 
-- On GEQ reduce production exp -> params 
-- On FULLSTOP reduce production exp -> params 
-- On EQUAL reduce production exp -> params 
-- On EOF reduce production exp -> params 
-- On DIV reduce production exp -> params 
-- On ASSIGN reduce production exp -> params 
-- On AND reduce production exp -> params 

State 28:
exp -> exp . params [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . PLUS exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . MINUS exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . TIMES exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . DIV exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . LEQ exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . GEQ exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . EQUAL exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . NOTEQUAL exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . AND exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . OR exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . ASSIGN exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . SEMIC exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> EXCLAMATION exp . [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
-- On LPAREN shift to state 11
-- On params shift to state 29
-- On TIMES reduce production exp -> EXCLAMATION exp 
-- On SEMIC reduce production exp -> EXCLAMATION exp 
-- On RPAREN reduce production exp -> EXCLAMATION exp 
-- On RBRACE reduce production exp -> EXCLAMATION exp 
-- On PLUS reduce production exp -> EXCLAMATION exp 
-- On OR reduce production exp -> EXCLAMATION exp 
-- On NOTEQUAL reduce production exp -> EXCLAMATION exp 
-- On MINUS reduce production exp -> EXCLAMATION exp 
-- On LEQ reduce production exp -> EXCLAMATION exp 
-- On GEQ reduce production exp -> EXCLAMATION exp 
-- On FULLSTOP reduce production exp -> EXCLAMATION exp 
-- On EQUAL reduce production exp -> EXCLAMATION exp 
-- On EOF reduce production exp -> EXCLAMATION exp 
-- On DIV reduce production exp -> EXCLAMATION exp 
-- On ASSIGN reduce production exp -> EXCLAMATION exp 
-- On AND reduce production exp -> EXCLAMATION exp 

State 29:
exp -> exp params . [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
-- On TIMES reduce production exp -> exp params 
-- On SEMIC reduce production exp -> exp params 
-- On RPAREN reduce production exp -> exp params 
-- On RBRACE reduce production exp -> exp params 
-- On PLUS reduce production exp -> exp params 
-- On OR reduce production exp -> exp params 
-- On NOTEQUAL reduce production exp -> exp params 
-- On MINUS reduce production exp -> exp params 
-- On LPAREN reduce production exp -> exp params 
-- On LEQ reduce production exp -> exp params 
-- On GEQ reduce production exp -> exp params 
-- On FULLSTOP reduce production exp -> exp params 
-- On EQUAL reduce production exp -> exp params 
-- On EOF reduce production exp -> exp params 
-- On DIV reduce production exp -> exp params 
-- On ASSIGN reduce production exp -> exp params 
-- On AND reduce production exp -> exp params 

State 30:
exp -> exp . params [ TIMES SEMIC RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ EQUAL DIV ASSIGN AND ]
exp -> exp . PLUS exp [ TIMES SEMIC RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ EQUAL DIV ASSIGN AND ]
exp -> exp . MINUS exp [ TIMES SEMIC RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ EQUAL DIV ASSIGN AND ]
exp -> exp . TIMES exp [ TIMES SEMIC RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ EQUAL DIV ASSIGN AND ]
exp -> exp . DIV exp [ TIMES SEMIC RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ EQUAL DIV ASSIGN AND ]
exp -> exp . LEQ exp [ TIMES SEMIC RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ EQUAL DIV ASSIGN AND ]
exp -> exp . GEQ exp [ TIMES SEMIC RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ EQUAL DIV ASSIGN AND ]
exp -> exp . EQUAL exp [ TIMES SEMIC RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ EQUAL DIV ASSIGN AND ]
exp -> exp . NOTEQUAL exp [ TIMES SEMIC RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ EQUAL DIV ASSIGN AND ]
exp -> exp . AND exp [ TIMES SEMIC RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ EQUAL DIV ASSIGN AND ]
exp -> exp . OR exp [ TIMES SEMIC RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ EQUAL DIV ASSIGN AND ]
exp -> exp . ASSIGN exp [ TIMES SEMIC RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ EQUAL DIV ASSIGN AND ]
exp -> exp . SEMIC exp [ TIMES SEMIC RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ EQUAL DIV ASSIGN AND ]
exp -> IF params LBRACE exp . RBRACE ELSE LBRACE exp RBRACE [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
-- On TIMES shift to state 31
-- On SEMIC shift to state 33
-- On RBRACE shift to state 55
-- On PLUS shift to state 35
-- On OR shift to state 39
-- On NOTEQUAL shift to state 41
-- On MINUS shift to state 43
-- On LPAREN shift to state 11
-- On LEQ shift to state 45
-- On GEQ shift to state 47
-- On EQUAL shift to state 49
-- On DIV shift to state 37
-- On ASSIGN shift to state 53
-- On AND shift to state 51
-- On params shift to state 29

State 31:
exp -> exp TIMES . exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
-- On WHILE shift to state 10
-- On STRING shift to state 12
-- On READINT shift to state 13
-- On PRINTINT shift to state 14
-- On NOT shift to state 15
-- On NEW shift to state 16
-- On LPAREN shift to state 11
-- On LET shift to state 19
-- On INT shift to state 22
-- On IF shift to state 23
-- On EXCLAMATION shift to state 26
-- On params shift to state 27
-- On exp shift to state 32

State 32:
exp -> exp . params [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . PLUS exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . MINUS exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . TIMES exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp TIMES exp . [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . DIV exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . LEQ exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . GEQ exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . EQUAL exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . NOTEQUAL exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . AND exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . OR exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . ASSIGN exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . SEMIC exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
-- On LPAREN shift to state 11
-- On params shift to state 29
-- On TIMES reduce production exp -> exp TIMES exp 
-- On SEMIC reduce production exp -> exp TIMES exp 
-- On RPAREN reduce production exp -> exp TIMES exp 
-- On RBRACE reduce production exp -> exp TIMES exp 
-- On PLUS reduce production exp -> exp TIMES exp 
-- On OR reduce production exp -> exp TIMES exp 
-- On NOTEQUAL reduce production exp -> exp TIMES exp 
-- On MINUS reduce production exp -> exp TIMES exp 
-- On LEQ reduce production exp -> exp TIMES exp 
-- On GEQ reduce production exp -> exp TIMES exp 
-- On FULLSTOP reduce production exp -> exp TIMES exp 
-- On EQUAL reduce production exp -> exp TIMES exp 
-- On EOF reduce production exp -> exp TIMES exp 
-- On DIV reduce production exp -> exp TIMES exp 
-- On ASSIGN reduce production exp -> exp TIMES exp 
-- On AND reduce production exp -> exp TIMES exp 

State 33:
exp -> exp SEMIC . exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
-- On WHILE shift to state 10
-- On STRING shift to state 12
-- On READINT shift to state 13
-- On PRINTINT shift to state 14
-- On NOT shift to state 15
-- On NEW shift to state 16
-- On LPAREN shift to state 11
-- On LET shift to state 19
-- On INT shift to state 22
-- On IF shift to state 23
-- On EXCLAMATION shift to state 26
-- On params shift to state 27
-- On exp shift to state 34

State 34:
exp -> exp . params [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . PLUS exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . MINUS exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . TIMES exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . DIV exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . LEQ exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . GEQ exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . EQUAL exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . NOTEQUAL exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . AND exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . OR exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . ASSIGN exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . SEMIC exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp SEMIC exp . [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
-- On TIMES shift to state 31
-- On PLUS shift to state 35
-- On OR shift to state 39
-- On NOTEQUAL shift to state 41
-- On MINUS shift to state 43
-- On LPAREN shift to state 11
-- On LEQ shift to state 45
-- On GEQ shift to state 47
-- On EQUAL shift to state 49
-- On DIV shift to state 37
-- On ASSIGN shift to state 53
-- On AND shift to state 51
-- On params shift to state 29
-- On SEMIC reduce production exp -> exp SEMIC exp 
-- On RPAREN reduce production exp -> exp SEMIC exp 
-- On RBRACE reduce production exp -> exp SEMIC exp 
-- On FULLSTOP reduce production exp -> exp SEMIC exp 
-- On EOF reduce production exp -> exp SEMIC exp 

State 35:
exp -> exp PLUS . exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
-- On WHILE shift to state 10
-- On STRING shift to state 12
-- On READINT shift to state 13
-- On PRINTINT shift to state 14
-- On NOT shift to state 15
-- On NEW shift to state 16
-- On LPAREN shift to state 11
-- On LET shift to state 19
-- On INT shift to state 22
-- On IF shift to state 23
-- On EXCLAMATION shift to state 26
-- On params shift to state 27
-- On exp shift to state 36

State 36:
exp -> exp . params [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . PLUS exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp PLUS exp . [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . MINUS exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . TIMES exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . DIV exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . LEQ exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . GEQ exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . EQUAL exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . NOTEQUAL exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . AND exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . OR exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . ASSIGN exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . SEMIC exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
-- On TIMES shift to state 31
-- On LPAREN shift to state 11
-- On DIV shift to state 37
-- On params shift to state 29
-- On SEMIC reduce production exp -> exp PLUS exp 
-- On RPAREN reduce production exp -> exp PLUS exp 
-- On RBRACE reduce production exp -> exp PLUS exp 
-- On PLUS reduce production exp -> exp PLUS exp 
-- On OR reduce production exp -> exp PLUS exp 
-- On NOTEQUAL reduce production exp -> exp PLUS exp 
-- On MINUS reduce production exp -> exp PLUS exp 
-- On LEQ reduce production exp -> exp PLUS exp 
-- On GEQ reduce production exp -> exp PLUS exp 
-- On FULLSTOP reduce production exp -> exp PLUS exp 
-- On EQUAL reduce production exp -> exp PLUS exp 
-- On EOF reduce production exp -> exp PLUS exp 
-- On ASSIGN reduce production exp -> exp PLUS exp 
-- On AND reduce production exp -> exp PLUS exp 

State 37:
exp -> exp DIV . exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
-- On WHILE shift to state 10
-- On STRING shift to state 12
-- On READINT shift to state 13
-- On PRINTINT shift to state 14
-- On NOT shift to state 15
-- On NEW shift to state 16
-- On LPAREN shift to state 11
-- On LET shift to state 19
-- On INT shift to state 22
-- On IF shift to state 23
-- On EXCLAMATION shift to state 26
-- On params shift to state 27
-- On exp shift to state 38

State 38:
exp -> exp . params [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . PLUS exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . MINUS exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . TIMES exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . DIV exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp DIV exp . [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . LEQ exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . GEQ exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . EQUAL exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . NOTEQUAL exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . AND exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . OR exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . ASSIGN exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . SEMIC exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
-- On LPAREN shift to state 11
-- On params shift to state 29
-- On TIMES reduce production exp -> exp DIV exp 
-- On SEMIC reduce production exp -> exp DIV exp 
-- On RPAREN reduce production exp -> exp DIV exp 
-- On RBRACE reduce production exp -> exp DIV exp 
-- On PLUS reduce production exp -> exp DIV exp 
-- On OR reduce production exp -> exp DIV exp 
-- On NOTEQUAL reduce production exp -> exp DIV exp 
-- On MINUS reduce production exp -> exp DIV exp 
-- On LEQ reduce production exp -> exp DIV exp 
-- On GEQ reduce production exp -> exp DIV exp 
-- On FULLSTOP reduce production exp -> exp DIV exp 
-- On EQUAL reduce production exp -> exp DIV exp 
-- On EOF reduce production exp -> exp DIV exp 
-- On DIV reduce production exp -> exp DIV exp 
-- On ASSIGN reduce production exp -> exp DIV exp 
-- On AND reduce production exp -> exp DIV exp 

State 39:
exp -> exp OR . exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
-- On WHILE shift to state 10
-- On STRING shift to state 12
-- On READINT shift to state 13
-- On PRINTINT shift to state 14
-- On NOT shift to state 15
-- On NEW shift to state 16
-- On LPAREN shift to state 11
-- On LET shift to state 19
-- On INT shift to state 22
-- On IF shift to state 23
-- On EXCLAMATION shift to state 26
-- On params shift to state 27
-- On exp shift to state 40

State 40:
exp -> exp . params [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . PLUS exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . MINUS exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . TIMES exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . DIV exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . LEQ exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . GEQ exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . EQUAL exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . NOTEQUAL exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . AND exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . OR exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp OR exp . [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . ASSIGN exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . SEMIC exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
-- On TIMES shift to state 31
-- On PLUS shift to state 35
-- On NOTEQUAL shift to state 41
-- On MINUS shift to state 43
-- On LPAREN shift to state 11
-- On LEQ shift to state 45
-- On GEQ shift to state 47
-- On EQUAL shift to state 49
-- On DIV shift to state 37
-- On AND shift to state 51
-- On params shift to state 29
-- On SEMIC reduce production exp -> exp OR exp 
-- On RPAREN reduce production exp -> exp OR exp 
-- On RBRACE reduce production exp -> exp OR exp 
-- On OR reduce production exp -> exp OR exp 
-- On FULLSTOP reduce production exp -> exp OR exp 
-- On EOF reduce production exp -> exp OR exp 
-- On ASSIGN reduce production exp -> exp OR exp 

State 41:
exp -> exp NOTEQUAL . exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
-- On WHILE shift to state 10
-- On STRING shift to state 12
-- On READINT shift to state 13
-- On PRINTINT shift to state 14
-- On NOT shift to state 15
-- On NEW shift to state 16
-- On LPAREN shift to state 11
-- On LET shift to state 19
-- On INT shift to state 22
-- On IF shift to state 23
-- On EXCLAMATION shift to state 26
-- On params shift to state 27
-- On exp shift to state 42

State 42:
exp -> exp . params [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . PLUS exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . MINUS exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . TIMES exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . DIV exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . LEQ exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . GEQ exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . EQUAL exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . NOTEQUAL exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp NOTEQUAL exp . [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . AND exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . OR exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . ASSIGN exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . SEMIC exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
-- On TIMES shift to state 31
-- On PLUS shift to state 35
-- On NOTEQUAL shift to state 41
-- On MINUS shift to state 43
-- On LPAREN shift to state 11
-- On LEQ shift to state 45
-- On GEQ shift to state 47
-- On EQUAL shift to state 49
-- On DIV shift to state 37
-- On params shift to state 29
-- On SEMIC reduce production exp -> exp NOTEQUAL exp 
-- On RPAREN reduce production exp -> exp NOTEQUAL exp 
-- On RBRACE reduce production exp -> exp NOTEQUAL exp 
-- On OR reduce production exp -> exp NOTEQUAL exp 
-- On FULLSTOP reduce production exp -> exp NOTEQUAL exp 
-- On EOF reduce production exp -> exp NOTEQUAL exp 
-- On ASSIGN reduce production exp -> exp NOTEQUAL exp 
-- On AND reduce production exp -> exp NOTEQUAL exp 

State 43:
exp -> exp MINUS . exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
-- On WHILE shift to state 10
-- On STRING shift to state 12
-- On READINT shift to state 13
-- On PRINTINT shift to state 14
-- On NOT shift to state 15
-- On NEW shift to state 16
-- On LPAREN shift to state 11
-- On LET shift to state 19
-- On INT shift to state 22
-- On IF shift to state 23
-- On EXCLAMATION shift to state 26
-- On params shift to state 27
-- On exp shift to state 44

State 44:
exp -> exp . params [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . PLUS exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . MINUS exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp MINUS exp . [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . TIMES exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . DIV exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . LEQ exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . GEQ exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . EQUAL exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . NOTEQUAL exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . AND exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . OR exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . ASSIGN exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . SEMIC exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
-- On TIMES shift to state 31
-- On LPAREN shift to state 11
-- On DIV shift to state 37
-- On params shift to state 29
-- On SEMIC reduce production exp -> exp MINUS exp 
-- On RPAREN reduce production exp -> exp MINUS exp 
-- On RBRACE reduce production exp -> exp MINUS exp 
-- On PLUS reduce production exp -> exp MINUS exp 
-- On OR reduce production exp -> exp MINUS exp 
-- On NOTEQUAL reduce production exp -> exp MINUS exp 
-- On MINUS reduce production exp -> exp MINUS exp 
-- On LEQ reduce production exp -> exp MINUS exp 
-- On GEQ reduce production exp -> exp MINUS exp 
-- On FULLSTOP reduce production exp -> exp MINUS exp 
-- On EQUAL reduce production exp -> exp MINUS exp 
-- On EOF reduce production exp -> exp MINUS exp 
-- On ASSIGN reduce production exp -> exp MINUS exp 
-- On AND reduce production exp -> exp MINUS exp 

State 45:
exp -> exp LEQ . exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
-- On WHILE shift to state 10
-- On STRING shift to state 12
-- On READINT shift to state 13
-- On PRINTINT shift to state 14
-- On NOT shift to state 15
-- On NEW shift to state 16
-- On LPAREN shift to state 11
-- On LET shift to state 19
-- On INT shift to state 22
-- On IF shift to state 23
-- On EXCLAMATION shift to state 26
-- On params shift to state 27
-- On exp shift to state 46

State 46:
exp -> exp . params [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . PLUS exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . MINUS exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . TIMES exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . DIV exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . LEQ exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp LEQ exp . [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . GEQ exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . EQUAL exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . NOTEQUAL exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . AND exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . OR exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . ASSIGN exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . SEMIC exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
-- On TIMES shift to state 31
-- On PLUS shift to state 35
-- On MINUS shift to state 43
-- On LPAREN shift to state 11
-- On DIV shift to state 37
-- On params shift to state 29
-- On SEMIC reduce production exp -> exp LEQ exp 
-- On RPAREN reduce production exp -> exp LEQ exp 
-- On RBRACE reduce production exp -> exp LEQ exp 
-- On OR reduce production exp -> exp LEQ exp 
-- On NOTEQUAL reduce production exp -> exp LEQ exp 
-- On LEQ reduce production exp -> exp LEQ exp 
-- On GEQ reduce production exp -> exp LEQ exp 
-- On FULLSTOP reduce production exp -> exp LEQ exp 
-- On EQUAL reduce production exp -> exp LEQ exp 
-- On EOF reduce production exp -> exp LEQ exp 
-- On ASSIGN reduce production exp -> exp LEQ exp 
-- On AND reduce production exp -> exp LEQ exp 

State 47:
exp -> exp GEQ . exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
-- On WHILE shift to state 10
-- On STRING shift to state 12
-- On READINT shift to state 13
-- On PRINTINT shift to state 14
-- On NOT shift to state 15
-- On NEW shift to state 16
-- On LPAREN shift to state 11
-- On LET shift to state 19
-- On INT shift to state 22
-- On IF shift to state 23
-- On EXCLAMATION shift to state 26
-- On params shift to state 27
-- On exp shift to state 48

State 48:
exp -> exp . params [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . PLUS exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . MINUS exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . TIMES exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . DIV exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . LEQ exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . GEQ exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp GEQ exp . [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . EQUAL exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . NOTEQUAL exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . AND exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . OR exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . ASSIGN exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . SEMIC exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
-- On TIMES shift to state 31
-- On PLUS shift to state 35
-- On MINUS shift to state 43
-- On LPAREN shift to state 11
-- On DIV shift to state 37
-- On params shift to state 29
-- On SEMIC reduce production exp -> exp GEQ exp 
-- On RPAREN reduce production exp -> exp GEQ exp 
-- On RBRACE reduce production exp -> exp GEQ exp 
-- On OR reduce production exp -> exp GEQ exp 
-- On NOTEQUAL reduce production exp -> exp GEQ exp 
-- On LEQ reduce production exp -> exp GEQ exp 
-- On GEQ reduce production exp -> exp GEQ exp 
-- On FULLSTOP reduce production exp -> exp GEQ exp 
-- On EQUAL reduce production exp -> exp GEQ exp 
-- On EOF reduce production exp -> exp GEQ exp 
-- On ASSIGN reduce production exp -> exp GEQ exp 
-- On AND reduce production exp -> exp GEQ exp 

State 49:
exp -> exp EQUAL . exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
-- On WHILE shift to state 10
-- On STRING shift to state 12
-- On READINT shift to state 13
-- On PRINTINT shift to state 14
-- On NOT shift to state 15
-- On NEW shift to state 16
-- On LPAREN shift to state 11
-- On LET shift to state 19
-- On INT shift to state 22
-- On IF shift to state 23
-- On EXCLAMATION shift to state 26
-- On params shift to state 27
-- On exp shift to state 50

State 50:
exp -> exp . params [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . PLUS exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . MINUS exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . TIMES exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . DIV exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . LEQ exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . GEQ exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . EQUAL exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp EQUAL exp . [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . NOTEQUAL exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . AND exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . OR exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . ASSIGN exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . SEMIC exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
-- On TIMES shift to state 31
-- On PLUS shift to state 35
-- On NOTEQUAL shift to state 41
-- On MINUS shift to state 43
-- On LPAREN shift to state 11
-- On LEQ shift to state 45
-- On GEQ shift to state 47
-- On EQUAL shift to state 49
-- On DIV shift to state 37
-- On params shift to state 29
-- On SEMIC reduce production exp -> exp EQUAL exp 
-- On RPAREN reduce production exp -> exp EQUAL exp 
-- On RBRACE reduce production exp -> exp EQUAL exp 
-- On OR reduce production exp -> exp EQUAL exp 
-- On FULLSTOP reduce production exp -> exp EQUAL exp 
-- On EOF reduce production exp -> exp EQUAL exp 
-- On ASSIGN reduce production exp -> exp EQUAL exp 
-- On AND reduce production exp -> exp EQUAL exp 

State 51:
exp -> exp AND . exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
-- On WHILE shift to state 10
-- On STRING shift to state 12
-- On READINT shift to state 13
-- On PRINTINT shift to state 14
-- On NOT shift to state 15
-- On NEW shift to state 16
-- On LPAREN shift to state 11
-- On LET shift to state 19
-- On INT shift to state 22
-- On IF shift to state 23
-- On EXCLAMATION shift to state 26
-- On params shift to state 27
-- On exp shift to state 52

State 52:
exp -> exp . params [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . PLUS exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . MINUS exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . TIMES exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . DIV exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . LEQ exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . GEQ exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . EQUAL exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . NOTEQUAL exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . AND exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp AND exp . [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . OR exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . ASSIGN exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . SEMIC exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
-- On TIMES shift to state 31
-- On PLUS shift to state 35
-- On NOTEQUAL shift to state 41
-- On MINUS shift to state 43
-- On LPAREN shift to state 11
-- On LEQ shift to state 45
-- On GEQ shift to state 47
-- On EQUAL shift to state 49
-- On DIV shift to state 37
-- On params shift to state 29
-- On SEMIC reduce production exp -> exp AND exp 
-- On RPAREN reduce production exp -> exp AND exp 
-- On RBRACE reduce production exp -> exp AND exp 
-- On OR reduce production exp -> exp AND exp 
-- On FULLSTOP reduce production exp -> exp AND exp 
-- On EOF reduce production exp -> exp AND exp 
-- On ASSIGN reduce production exp -> exp AND exp 
-- On AND reduce production exp -> exp AND exp 

State 53:
exp -> exp ASSIGN . exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
-- On WHILE shift to state 10
-- On STRING shift to state 12
-- On READINT shift to state 13
-- On PRINTINT shift to state 14
-- On NOT shift to state 15
-- On NEW shift to state 16
-- On LPAREN shift to state 11
-- On LET shift to state 19
-- On INT shift to state 22
-- On IF shift to state 23
-- On EXCLAMATION shift to state 26
-- On params shift to state 27
-- On exp shift to state 54

State 54:
exp -> exp . params [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . PLUS exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . MINUS exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . TIMES exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . DIV exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . LEQ exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . GEQ exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . EQUAL exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . NOTEQUAL exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . AND exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . OR exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . ASSIGN exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp ASSIGN exp . [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . SEMIC exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
-- On TIMES shift to state 31
-- On PLUS shift to state 35
-- On OR shift to state 39
-- On NOTEQUAL shift to state 41
-- On MINUS shift to state 43
-- On LPAREN shift to state 11
-- On LEQ shift to state 45
-- On GEQ shift to state 47
-- On EQUAL shift to state 49
-- On DIV shift to state 37
-- On ASSIGN shift to state 53
-- On AND shift to state 51
-- On params shift to state 29
-- On SEMIC reduce production exp -> exp ASSIGN exp 
-- On RPAREN reduce production exp -> exp ASSIGN exp 
-- On RBRACE reduce production exp -> exp ASSIGN exp 
-- On FULLSTOP reduce production exp -> exp ASSIGN exp 
-- On EOF reduce production exp -> exp ASSIGN exp 

State 55:
exp -> IF params LBRACE exp RBRACE . ELSE LBRACE exp RBRACE [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
-- On ELSE shift to state 56

State 56:
exp -> IF params LBRACE exp RBRACE ELSE . LBRACE exp RBRACE [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
-- On LBRACE shift to state 57

State 57:
exp -> IF params LBRACE exp RBRACE ELSE LBRACE . exp RBRACE [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
-- On WHILE shift to state 10
-- On STRING shift to state 12
-- On READINT shift to state 13
-- On PRINTINT shift to state 14
-- On NOT shift to state 15
-- On NEW shift to state 16
-- On LPAREN shift to state 11
-- On LET shift to state 19
-- On INT shift to state 22
-- On IF shift to state 23
-- On EXCLAMATION shift to state 26
-- On params shift to state 27
-- On exp shift to state 58

State 58:
exp -> exp . params [ TIMES SEMIC RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ EQUAL DIV ASSIGN AND ]
exp -> exp . PLUS exp [ TIMES SEMIC RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ EQUAL DIV ASSIGN AND ]
exp -> exp . MINUS exp [ TIMES SEMIC RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ EQUAL DIV ASSIGN AND ]
exp -> exp . TIMES exp [ TIMES SEMIC RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ EQUAL DIV ASSIGN AND ]
exp -> exp . DIV exp [ TIMES SEMIC RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ EQUAL DIV ASSIGN AND ]
exp -> exp . LEQ exp [ TIMES SEMIC RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ EQUAL DIV ASSIGN AND ]
exp -> exp . GEQ exp [ TIMES SEMIC RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ EQUAL DIV ASSIGN AND ]
exp -> exp . EQUAL exp [ TIMES SEMIC RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ EQUAL DIV ASSIGN AND ]
exp -> exp . NOTEQUAL exp [ TIMES SEMIC RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ EQUAL DIV ASSIGN AND ]
exp -> exp . AND exp [ TIMES SEMIC RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ EQUAL DIV ASSIGN AND ]
exp -> exp . OR exp [ TIMES SEMIC RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ EQUAL DIV ASSIGN AND ]
exp -> exp . ASSIGN exp [ TIMES SEMIC RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ EQUAL DIV ASSIGN AND ]
exp -> exp . SEMIC exp [ TIMES SEMIC RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ EQUAL DIV ASSIGN AND ]
exp -> IF params LBRACE exp RBRACE ELSE LBRACE exp . RBRACE [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
-- On TIMES shift to state 31
-- On SEMIC shift to state 33
-- On RBRACE shift to state 59
-- On PLUS shift to state 35
-- On OR shift to state 39
-- On NOTEQUAL shift to state 41
-- On MINUS shift to state 43
-- On LPAREN shift to state 11
-- On LEQ shift to state 45
-- On GEQ shift to state 47
-- On EQUAL shift to state 49
-- On DIV shift to state 37
-- On ASSIGN shift to state 53
-- On AND shift to state 51
-- On params shift to state 29

State 59:
exp -> IF params LBRACE exp RBRACE ELSE LBRACE exp RBRACE . [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
-- On TIMES reduce production exp -> IF params LBRACE exp RBRACE ELSE LBRACE exp RBRACE 
-- On SEMIC reduce production exp -> IF params LBRACE exp RBRACE ELSE LBRACE exp RBRACE 
-- On RPAREN reduce production exp -> IF params LBRACE exp RBRACE ELSE LBRACE exp RBRACE 
-- On RBRACE reduce production exp -> IF params LBRACE exp RBRACE ELSE LBRACE exp RBRACE 
-- On PLUS reduce production exp -> IF params LBRACE exp RBRACE ELSE LBRACE exp RBRACE 
-- On OR reduce production exp -> IF params LBRACE exp RBRACE ELSE LBRACE exp RBRACE 
-- On NOTEQUAL reduce production exp -> IF params LBRACE exp RBRACE ELSE LBRACE exp RBRACE 
-- On MINUS reduce production exp -> IF params LBRACE exp RBRACE ELSE LBRACE exp RBRACE 
-- On LPAREN reduce production exp -> IF params LBRACE exp RBRACE ELSE LBRACE exp RBRACE 
-- On LEQ reduce production exp -> IF params LBRACE exp RBRACE ELSE LBRACE exp RBRACE 
-- On GEQ reduce production exp -> IF params LBRACE exp RBRACE ELSE LBRACE exp RBRACE 
-- On FULLSTOP reduce production exp -> IF params LBRACE exp RBRACE ELSE LBRACE exp RBRACE 
-- On EQUAL reduce production exp -> IF params LBRACE exp RBRACE ELSE LBRACE exp RBRACE 
-- On EOF reduce production exp -> IF params LBRACE exp RBRACE ELSE LBRACE exp RBRACE 
-- On DIV reduce production exp -> IF params LBRACE exp RBRACE ELSE LBRACE exp RBRACE 
-- On ASSIGN reduce production exp -> IF params LBRACE exp RBRACE ELSE LBRACE exp RBRACE 
-- On AND reduce production exp -> IF params LBRACE exp RBRACE ELSE LBRACE exp RBRACE 

State 60:
exp -> exp . params [ TIMES SEMIC PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ EQUAL DIV ASSIGN AND ]
exp -> exp . PLUS exp [ TIMES SEMIC PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ EQUAL DIV ASSIGN AND ]
exp -> exp . MINUS exp [ TIMES SEMIC PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ EQUAL DIV ASSIGN AND ]
exp -> exp . TIMES exp [ TIMES SEMIC PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ EQUAL DIV ASSIGN AND ]
exp -> exp . DIV exp [ TIMES SEMIC PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ EQUAL DIV ASSIGN AND ]
exp -> exp . LEQ exp [ TIMES SEMIC PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ EQUAL DIV ASSIGN AND ]
exp -> exp . GEQ exp [ TIMES SEMIC PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ EQUAL DIV ASSIGN AND ]
exp -> exp . EQUAL exp [ TIMES SEMIC PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ EQUAL DIV ASSIGN AND ]
exp -> exp . NOTEQUAL exp [ TIMES SEMIC PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ EQUAL DIV ASSIGN AND ]
exp -> exp . AND exp [ TIMES SEMIC PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ EQUAL DIV ASSIGN AND ]
exp -> exp . OR exp [ TIMES SEMIC PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ EQUAL DIV ASSIGN AND ]
exp -> exp . ASSIGN exp [ TIMES SEMIC PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ EQUAL DIV ASSIGN AND ]
exp -> exp . SEMIC exp [ TIMES SEMIC PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ EQUAL DIV ASSIGN AND ]
exp -> LET STRING ASSIGN exp . SEMIC exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
-- On TIMES shift to state 31
-- On SEMIC shift to state 61
-- On PLUS shift to state 35
-- On OR shift to state 39
-- On NOTEQUAL shift to state 41
-- On MINUS shift to state 43
-- On LPAREN shift to state 11
-- On LEQ shift to state 45
-- On GEQ shift to state 47
-- On EQUAL shift to state 49
-- On DIV shift to state 37
-- On ASSIGN shift to state 53
-- On AND shift to state 51
-- On params shift to state 29

State 61:
exp -> exp SEMIC . exp [ TIMES SEMIC PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ EQUAL DIV ASSIGN AND ]
exp -> LET STRING ASSIGN exp SEMIC . exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
-- On WHILE shift to state 10
-- On STRING shift to state 12
-- On READINT shift to state 13
-- On PRINTINT shift to state 14
-- On NOT shift to state 15
-- On NEW shift to state 16
-- On LPAREN shift to state 11
-- On LET shift to state 19
-- On INT shift to state 22
-- On IF shift to state 23
-- On EXCLAMATION shift to state 26
-- On params shift to state 27
-- On exp shift to state 62

State 62:
exp -> exp . params [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . PLUS exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . MINUS exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . TIMES exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . DIV exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . LEQ exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . GEQ exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . EQUAL exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . NOTEQUAL exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . AND exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . OR exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . ASSIGN exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . SEMIC exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp SEMIC exp . [ TIMES SEMIC PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ EQUAL DIV ASSIGN AND ]
exp -> LET STRING ASSIGN exp SEMIC exp . [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
-- On TIMES shift to state 31
-- On SEMIC shift to state 33
-- On PLUS shift to state 35
-- On OR shift to state 39
-- On NOTEQUAL shift to state 41
-- On MINUS shift to state 43
-- On LPAREN shift to state 11
-- On LEQ shift to state 45
-- On GEQ shift to state 47
-- On EQUAL shift to state 49
-- On DIV shift to state 37
-- On ASSIGN shift to state 53
-- On AND shift to state 51
-- On params shift to state 29
-- On SEMIC reduce production exp -> exp SEMIC exp 
-- On SEMIC reduce production exp -> LET STRING ASSIGN exp SEMIC exp 
-- On RPAREN reduce production exp -> LET STRING ASSIGN exp SEMIC exp 
-- On RBRACE reduce production exp -> LET STRING ASSIGN exp SEMIC exp 
-- On FULLSTOP reduce production exp -> LET STRING ASSIGN exp SEMIC exp 
-- On EOF reduce production exp -> LET STRING ASSIGN exp SEMIC exp 
** Conflict on SEMIC

State 63:
exp -> exp . params [ TIMES SEMIC PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ EQUAL DIV ASSIGN AND ]
exp -> exp . PLUS exp [ TIMES SEMIC PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ EQUAL DIV ASSIGN AND ]
exp -> exp . MINUS exp [ TIMES SEMIC PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ EQUAL DIV ASSIGN AND ]
exp -> exp . TIMES exp [ TIMES SEMIC PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ EQUAL DIV ASSIGN AND ]
exp -> exp . DIV exp [ TIMES SEMIC PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ EQUAL DIV ASSIGN AND ]
exp -> exp . LEQ exp [ TIMES SEMIC PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ EQUAL DIV ASSIGN AND ]
exp -> exp . GEQ exp [ TIMES SEMIC PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ EQUAL DIV ASSIGN AND ]
exp -> exp . EQUAL exp [ TIMES SEMIC PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ EQUAL DIV ASSIGN AND ]
exp -> exp . NOTEQUAL exp [ TIMES SEMIC PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ EQUAL DIV ASSIGN AND ]
exp -> exp . AND exp [ TIMES SEMIC PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ EQUAL DIV ASSIGN AND ]
exp -> exp . OR exp [ TIMES SEMIC PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ EQUAL DIV ASSIGN AND ]
exp -> exp . ASSIGN exp [ TIMES SEMIC PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ EQUAL DIV ASSIGN AND ]
exp -> exp . SEMIC exp [ TIMES SEMIC PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ EQUAL DIV ASSIGN AND ]
exp -> NEW STRING ASSIGN exp . SEMIC exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
-- On TIMES shift to state 31
-- On SEMIC shift to state 64
-- On PLUS shift to state 35
-- On OR shift to state 39
-- On NOTEQUAL shift to state 41
-- On MINUS shift to state 43
-- On LPAREN shift to state 11
-- On LEQ shift to state 45
-- On GEQ shift to state 47
-- On EQUAL shift to state 49
-- On DIV shift to state 37
-- On ASSIGN shift to state 53
-- On AND shift to state 51
-- On params shift to state 29

State 64:
exp -> exp SEMIC . exp [ TIMES SEMIC PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ EQUAL DIV ASSIGN AND ]
exp -> NEW STRING ASSIGN exp SEMIC . exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
-- On WHILE shift to state 10
-- On STRING shift to state 12
-- On READINT shift to state 13
-- On PRINTINT shift to state 14
-- On NOT shift to state 15
-- On NEW shift to state 16
-- On LPAREN shift to state 11
-- On LET shift to state 19
-- On INT shift to state 22
-- On IF shift to state 23
-- On EXCLAMATION shift to state 26
-- On params shift to state 27
-- On exp shift to state 65

State 65:
exp -> exp . params [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . PLUS exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . MINUS exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . TIMES exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . DIV exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . LEQ exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . GEQ exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . EQUAL exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . NOTEQUAL exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . AND exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . OR exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . ASSIGN exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . SEMIC exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp SEMIC exp . [ TIMES SEMIC PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ EQUAL DIV ASSIGN AND ]
exp -> NEW STRING ASSIGN exp SEMIC exp . [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
-- On TIMES shift to state 31
-- On SEMIC shift to state 33
-- On PLUS shift to state 35
-- On OR shift to state 39
-- On NOTEQUAL shift to state 41
-- On MINUS shift to state 43
-- On LPAREN shift to state 11
-- On LEQ shift to state 45
-- On GEQ shift to state 47
-- On EQUAL shift to state 49
-- On DIV shift to state 37
-- On ASSIGN shift to state 53
-- On AND shift to state 51
-- On params shift to state 29
-- On SEMIC reduce production exp -> exp SEMIC exp 
-- On SEMIC reduce production exp -> NEW STRING ASSIGN exp SEMIC exp 
-- On RPAREN reduce production exp -> NEW STRING ASSIGN exp SEMIC exp 
-- On RBRACE reduce production exp -> NEW STRING ASSIGN exp SEMIC exp 
-- On FULLSTOP reduce production exp -> NEW STRING ASSIGN exp SEMIC exp 
-- On EOF reduce production exp -> NEW STRING ASSIGN exp SEMIC exp 
** Conflict on SEMIC

State 66:
exp -> exp . params [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . PLUS exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . MINUS exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . TIMES exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . DIV exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . LEQ exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . GEQ exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . EQUAL exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . NOTEQUAL exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . AND exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . OR exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> NOT exp . [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . ASSIGN exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . SEMIC exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
-- On LPAREN shift to state 11
-- On params shift to state 29
-- On TIMES reduce production exp -> NOT exp 
-- On SEMIC reduce production exp -> NOT exp 
-- On RPAREN reduce production exp -> NOT exp 
-- On RBRACE reduce production exp -> NOT exp 
-- On PLUS reduce production exp -> NOT exp 
-- On OR reduce production exp -> NOT exp 
-- On NOTEQUAL reduce production exp -> NOT exp 
-- On MINUS reduce production exp -> NOT exp 
-- On LEQ reduce production exp -> NOT exp 
-- On GEQ reduce production exp -> NOT exp 
-- On FULLSTOP reduce production exp -> NOT exp 
-- On EQUAL reduce production exp -> NOT exp 
-- On EOF reduce production exp -> NOT exp 
-- On DIV reduce production exp -> NOT exp 
-- On ASSIGN reduce production exp -> NOT exp 
-- On AND reduce production exp -> NOT exp 

State 67:
exp -> exp . params [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . PLUS exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . MINUS exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . TIMES exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . DIV exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . LEQ exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . GEQ exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . EQUAL exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . NOTEQUAL exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . AND exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . OR exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . ASSIGN exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . SEMIC exp [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> PRINTINT exp . [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
-- On TIMES shift to state 31
-- On PLUS shift to state 35
-- On MINUS shift to state 43
-- On LPAREN shift to state 11
-- On LEQ shift to state 45
-- On GEQ shift to state 47
-- On DIV shift to state 37
-- On params shift to state 29
-- On SEMIC reduce production exp -> PRINTINT exp 
-- On RPAREN reduce production exp -> PRINTINT exp 
-- On RBRACE reduce production exp -> PRINTINT exp 
-- On OR reduce production exp -> PRINTINT exp 
-- On NOTEQUAL reduce production exp -> PRINTINT exp 
-- On FULLSTOP reduce production exp -> PRINTINT exp 
-- On EQUAL reduce production exp -> PRINTINT exp 
-- On EOF reduce production exp -> PRINTINT exp 
-- On ASSIGN reduce production exp -> PRINTINT exp 
-- On AND reduce production exp -> PRINTINT exp 

State 68:
exp -> exp . params [ TIMES SEMIC RPAREN PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ EQUAL DIV ASSIGN AND ]
exp -> exp . PLUS exp [ TIMES SEMIC RPAREN PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ EQUAL DIV ASSIGN AND ]
exp -> exp . MINUS exp [ TIMES SEMIC RPAREN PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ EQUAL DIV ASSIGN AND ]
exp -> exp . TIMES exp [ TIMES SEMIC RPAREN PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ EQUAL DIV ASSIGN AND ]
exp -> exp . DIV exp [ TIMES SEMIC RPAREN PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ EQUAL DIV ASSIGN AND ]
exp -> exp . LEQ exp [ TIMES SEMIC RPAREN PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ EQUAL DIV ASSIGN AND ]
exp -> exp . GEQ exp [ TIMES SEMIC RPAREN PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ EQUAL DIV ASSIGN AND ]
exp -> exp . EQUAL exp [ TIMES SEMIC RPAREN PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ EQUAL DIV ASSIGN AND ]
exp -> exp . NOTEQUAL exp [ TIMES SEMIC RPAREN PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ EQUAL DIV ASSIGN AND ]
exp -> exp . AND exp [ TIMES SEMIC RPAREN PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ EQUAL DIV ASSIGN AND ]
exp -> exp . OR exp [ TIMES SEMIC RPAREN PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ EQUAL DIV ASSIGN AND ]
exp -> exp . ASSIGN exp [ TIMES SEMIC RPAREN PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ EQUAL DIV ASSIGN AND ]
exp -> exp . SEMIC exp [ TIMES SEMIC RPAREN PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ EQUAL DIV ASSIGN AND ]
params -> LPAREN exp . RPAREN [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ LBRACE GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
-- On TIMES shift to state 31
-- On SEMIC shift to state 33
-- On RPAREN shift to state 69
-- On PLUS shift to state 35
-- On OR shift to state 39
-- On NOTEQUAL shift to state 41
-- On MINUS shift to state 43
-- On LPAREN shift to state 11
-- On LEQ shift to state 45
-- On GEQ shift to state 47
-- On EQUAL shift to state 49
-- On DIV shift to state 37
-- On ASSIGN shift to state 53
-- On AND shift to state 51
-- On params shift to state 29

State 69:
params -> LPAREN exp RPAREN . [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ LBRACE GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
-- On TIMES reduce production params -> LPAREN exp RPAREN 
-- On SEMIC reduce production params -> LPAREN exp RPAREN 
-- On RPAREN reduce production params -> LPAREN exp RPAREN 
-- On RBRACE reduce production params -> LPAREN exp RPAREN 
-- On PLUS reduce production params -> LPAREN exp RPAREN 
-- On OR reduce production params -> LPAREN exp RPAREN 
-- On NOTEQUAL reduce production params -> LPAREN exp RPAREN 
-- On MINUS reduce production params -> LPAREN exp RPAREN 
-- On LPAREN reduce production params -> LPAREN exp RPAREN 
-- On LEQ reduce production params -> LPAREN exp RPAREN 
-- On LBRACE reduce production params -> LPAREN exp RPAREN 
-- On GEQ reduce production params -> LPAREN exp RPAREN 
-- On FULLSTOP reduce production params -> LPAREN exp RPAREN 
-- On EQUAL reduce production params -> LPAREN exp RPAREN 
-- On EOF reduce production params -> LPAREN exp RPAREN 
-- On DIV reduce production params -> LPAREN exp RPAREN 
-- On ASSIGN reduce production params -> LPAREN exp RPAREN 
-- On AND reduce production params -> LPAREN exp RPAREN 

State 70:
exp -> WHILE params . LBRACE exp RBRACE [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
-- On LBRACE shift to state 71

State 71:
exp -> WHILE params LBRACE . exp RBRACE [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
-- On WHILE shift to state 10
-- On STRING shift to state 12
-- On READINT shift to state 13
-- On PRINTINT shift to state 14
-- On NOT shift to state 15
-- On NEW shift to state 16
-- On LPAREN shift to state 11
-- On LET shift to state 19
-- On INT shift to state 22
-- On IF shift to state 23
-- On EXCLAMATION shift to state 26
-- On params shift to state 27
-- On exp shift to state 72

State 72:
exp -> exp . params [ TIMES SEMIC RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ EQUAL DIV ASSIGN AND ]
exp -> exp . PLUS exp [ TIMES SEMIC RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ EQUAL DIV ASSIGN AND ]
exp -> exp . MINUS exp [ TIMES SEMIC RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ EQUAL DIV ASSIGN AND ]
exp -> exp . TIMES exp [ TIMES SEMIC RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ EQUAL DIV ASSIGN AND ]
exp -> exp . DIV exp [ TIMES SEMIC RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ EQUAL DIV ASSIGN AND ]
exp -> exp . LEQ exp [ TIMES SEMIC RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ EQUAL DIV ASSIGN AND ]
exp -> exp . GEQ exp [ TIMES SEMIC RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ EQUAL DIV ASSIGN AND ]
exp -> exp . EQUAL exp [ TIMES SEMIC RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ EQUAL DIV ASSIGN AND ]
exp -> exp . NOTEQUAL exp [ TIMES SEMIC RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ EQUAL DIV ASSIGN AND ]
exp -> exp . AND exp [ TIMES SEMIC RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ EQUAL DIV ASSIGN AND ]
exp -> exp . OR exp [ TIMES SEMIC RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ EQUAL DIV ASSIGN AND ]
exp -> exp . ASSIGN exp [ TIMES SEMIC RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ EQUAL DIV ASSIGN AND ]
exp -> exp . SEMIC exp [ TIMES SEMIC RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ EQUAL DIV ASSIGN AND ]
exp -> WHILE params LBRACE exp . RBRACE [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
-- On TIMES shift to state 31
-- On SEMIC shift to state 33
-- On RBRACE shift to state 73
-- On PLUS shift to state 35
-- On OR shift to state 39
-- On NOTEQUAL shift to state 41
-- On MINUS shift to state 43
-- On LPAREN shift to state 11
-- On LEQ shift to state 45
-- On GEQ shift to state 47
-- On EQUAL shift to state 49
-- On DIV shift to state 37
-- On ASSIGN shift to state 53
-- On AND shift to state 51
-- On params shift to state 29

State 73:
exp -> WHILE params LBRACE exp RBRACE . [ TIMES SEMIC RPAREN RBRACE PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
-- On TIMES reduce production exp -> WHILE params LBRACE exp RBRACE 
-- On SEMIC reduce production exp -> WHILE params LBRACE exp RBRACE 
-- On RPAREN reduce production exp -> WHILE params LBRACE exp RBRACE 
-- On RBRACE reduce production exp -> WHILE params LBRACE exp RBRACE 
-- On PLUS reduce production exp -> WHILE params LBRACE exp RBRACE 
-- On OR reduce production exp -> WHILE params LBRACE exp RBRACE 
-- On NOTEQUAL reduce production exp -> WHILE params LBRACE exp RBRACE 
-- On MINUS reduce production exp -> WHILE params LBRACE exp RBRACE 
-- On LPAREN reduce production exp -> WHILE params LBRACE exp RBRACE 
-- On LEQ reduce production exp -> WHILE params LBRACE exp RBRACE 
-- On GEQ reduce production exp -> WHILE params LBRACE exp RBRACE 
-- On FULLSTOP reduce production exp -> WHILE params LBRACE exp RBRACE 
-- On EQUAL reduce production exp -> WHILE params LBRACE exp RBRACE 
-- On EOF reduce production exp -> WHILE params LBRACE exp RBRACE 
-- On DIV reduce production exp -> WHILE params LBRACE exp RBRACE 
-- On ASSIGN reduce production exp -> WHILE params LBRACE exp RBRACE 
-- On AND reduce production exp -> WHILE params LBRACE exp RBRACE 

State 74:
exp -> exp . params [ TIMES SEMIC PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . PLUS exp [ TIMES SEMIC PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . MINUS exp [ TIMES SEMIC PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . TIMES exp [ TIMES SEMIC PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . DIV exp [ TIMES SEMIC PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . LEQ exp [ TIMES SEMIC PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . GEQ exp [ TIMES SEMIC PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . EQUAL exp [ TIMES SEMIC PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . NOTEQUAL exp [ TIMES SEMIC PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . AND exp [ TIMES SEMIC PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . OR exp [ TIMES SEMIC PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . ASSIGN exp [ TIMES SEMIC PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
exp -> exp . SEMIC exp [ TIMES SEMIC PLUS OR NOTEQUAL MINUS LPAREN LEQ GEQ FULLSTOP EQUAL EOF DIV ASSIGN AND ]
fundef -> STRING LPAREN loption(separated_nonempty_list(COMMA,STRING)) RPAREN COLON exp . [ FULLSTOP EOF ]
-- On TIMES shift to state 31
-- On SEMIC shift to state 33
-- On PLUS shift to state 35
-- On OR shift to state 39
-- On NOTEQUAL shift to state 41
-- On MINUS shift to state 43
-- On LPAREN shift to state 11
-- On LEQ shift to state 45
-- On GEQ shift to state 47
-- On EQUAL shift to state 49
-- On DIV shift to state 37
-- On ASSIGN shift to state 53
-- On AND shift to state 51
-- On params shift to state 29
-- On FULLSTOP reduce production fundef -> STRING LPAREN loption(separated_nonempty_list(COMMA,STRING)) RPAREN COLON exp 
-- On EOF reduce production fundef -> STRING LPAREN loption(separated_nonempty_list(COMMA,STRING)) RPAREN COLON exp 

State 75:
top' -> top . [ # ]
-- On # accept top

State 76:
loption(separated_nonempty_list(FULLSTOP,fundef)) -> separated_nonempty_list(FULLSTOP,fundef) . [ EOF ]
-- On EOF reduce production loption(separated_nonempty_list(FULLSTOP,fundef)) -> separated_nonempty_list(FULLSTOP,fundef) 

State 77:
top -> loption(separated_nonempty_list(FULLSTOP,fundef)) . EOF [ # ]
-- On EOF shift to state 78

State 78:
top -> loption(separated_nonempty_list(FULLSTOP,fundef)) EOF . [ # ]
-- On # reduce production top -> loption(separated_nonempty_list(FULLSTOP,fundef)) EOF 

State 79:
separated_nonempty_list(FULLSTOP,fundef) -> fundef . [ EOF ]
separated_nonempty_list(FULLSTOP,fundef) -> fundef . FULLSTOP separated_nonempty_list(FULLSTOP,fundef) [ EOF ]
-- On FULLSTOP shift to state 80
-- On EOF reduce production separated_nonempty_list(FULLSTOP,fundef) -> fundef 

State 80:
separated_nonempty_list(FULLSTOP,fundef) -> fundef FULLSTOP . separated_nonempty_list(FULLSTOP,fundef) [ EOF ]
-- On STRING shift to state 1
-- On separated_nonempty_list(FULLSTOP,fundef) shift to state 81
-- On fundef shift to state 79

State 81:
separated_nonempty_list(FULLSTOP,fundef) -> fundef FULLSTOP separated_nonempty_list(FULLSTOP,fundef) . [ EOF ]
-- On EOF reduce production separated_nonempty_list(FULLSTOP,fundef) -> fundef FULLSTOP separated_nonempty_list(FULLSTOP,fundef) 

