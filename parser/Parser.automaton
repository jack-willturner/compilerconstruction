State 0:
top' -> . top [ # ]
-- On STRING shift to state 1
-- On top shift to state 85
-- On separated_nonempty_list(FULLSTOP,fundef) shift to state 86
-- On loption(separated_nonempty_list(FULLSTOP,fundef)) shift to state 87
-- On fundef shift to state 89
-- On EOF reduce production loption(separated_nonempty_list(FULLSTOP,fundef)) -> 

State 1:
fundef -> STRING . LPAREN loption(separated_nonempty_list(COMMA,STRING)) RPAREN DEF exp [ FULLSTOP EOF ]
-- On LPAREN shift to state 2

State 2:
fundef -> STRING LPAREN . loption(separated_nonempty_list(COMMA,STRING)) RPAREN DEF exp [ FULLSTOP EOF ]
-- On STRING shift to state 3
-- On separated_nonempty_list(COMMA,STRING) shift to state 6
-- On loption(separated_nonempty_list(COMMA,STRING)) shift to state 7
-- On RPAREN reduce production loption(separated_nonempty_list(COMMA,STRING)) -> 

State 3:
separated_nonempty_list(COMMA,STRING) -> STRING . [ RPAREN ]
separated_nonempty_list(COMMA,STRING) -> STRING . COMMA separated_nonempty_list(COMMA,STRING) [ RPAREN ]
-- On COMMA shift to state 4
-- On RPAREN reduce production separated_nonempty_list(COMMA,STRING) -> STRING 

State 4:
separated_nonempty_list(COMMA,STRING) -> STRING COMMA . separated_nonempty_list(COMMA,STRING) [ RPAREN ]
-- On STRING shift to state 3
-- On separated_nonempty_list(COMMA,STRING) shift to state 5

State 5:
separated_nonempty_list(COMMA,STRING) -> STRING COMMA separated_nonempty_list(COMMA,STRING) . [ RPAREN ]
-- On RPAREN reduce production separated_nonempty_list(COMMA,STRING) -> STRING COMMA separated_nonempty_list(COMMA,STRING) 

State 6:
loption(separated_nonempty_list(COMMA,STRING)) -> separated_nonempty_list(COMMA,STRING) . [ RPAREN ]
-- On RPAREN reduce production loption(separated_nonempty_list(COMMA,STRING)) -> separated_nonempty_list(COMMA,STRING) 

State 7:
fundef -> STRING LPAREN loption(separated_nonempty_list(COMMA,STRING)) . RPAREN DEF exp [ FULLSTOP EOF ]
-- On RPAREN shift to state 8

State 8:
fundef -> STRING LPAREN loption(separated_nonempty_list(COMMA,STRING)) RPAREN . DEF exp [ FULLSTOP EOF ]
-- On DEF shift to state 9

State 9:
fundef -> STRING LPAREN loption(separated_nonempty_list(COMMA,STRING)) RPAREN DEF . exp [ FULLSTOP EOF ]
-- On WHILE shift to state 10
-- On STRING shift to state 12
-- On READINT shift to state 13
-- On PRINTINT shift to state 14
-- On NOT shift to state 15
-- On NEW shift to state 16
-- On LET shift to state 19
-- On INT shift to state 22
-- On IF shift to state 23
-- On EXCLAMATION shift to state 25
-- On exp shift to state 84

State 10:
exp -> WHILE . LPAREN exp RPAREN DO LBRACE exp RBRACE [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
-- On LPAREN shift to state 11

State 11:
exp -> WHILE LPAREN . exp RPAREN DO LBRACE exp RBRACE [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
-- On WHILE shift to state 10
-- On STRING shift to state 12
-- On READINT shift to state 13
-- On PRINTINT shift to state 14
-- On NOT shift to state 15
-- On NEW shift to state 16
-- On LET shift to state 19
-- On INT shift to state 22
-- On IF shift to state 23
-- On EXCLAMATION shift to state 25
-- On exp shift to state 78

State 12:
exp -> STRING . [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
-- On TIMES reduce production exp -> STRING 
-- On SEMIC reduce production exp -> STRING 
-- On RPAREN reduce production exp -> STRING 
-- On RBRACE reduce production exp -> STRING 
-- On PLUS reduce production exp -> STRING 
-- On OR reduce production exp -> STRING 
-- On MINUS reduce production exp -> STRING 
-- On LPAREN reduce production exp -> STRING 
-- On LEQ reduce production exp -> STRING 
-- On IN reduce production exp -> STRING 
-- On GEQ reduce production exp -> STRING 
-- On FULLSTOP reduce production exp -> STRING 
-- On EXCLAMATION reduce production exp -> STRING 
-- On EQUAL reduce production exp -> STRING 
-- On EOF reduce production exp -> STRING 
-- On DIV reduce production exp -> STRING 
-- On COMMA reduce production exp -> STRING 
-- On COLON reduce production exp -> STRING 
-- On AND reduce production exp -> STRING 

State 13:
exp -> READINT . [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
-- On TIMES reduce production exp -> READINT 
-- On SEMIC reduce production exp -> READINT 
-- On RPAREN reduce production exp -> READINT 
-- On RBRACE reduce production exp -> READINT 
-- On PLUS reduce production exp -> READINT 
-- On OR reduce production exp -> READINT 
-- On MINUS reduce production exp -> READINT 
-- On LPAREN reduce production exp -> READINT 
-- On LEQ reduce production exp -> READINT 
-- On IN reduce production exp -> READINT 
-- On GEQ reduce production exp -> READINT 
-- On FULLSTOP reduce production exp -> READINT 
-- On EXCLAMATION reduce production exp -> READINT 
-- On EQUAL reduce production exp -> READINT 
-- On EOF reduce production exp -> READINT 
-- On DIV reduce production exp -> READINT 
-- On COMMA reduce production exp -> READINT 
-- On COLON reduce production exp -> READINT 
-- On AND reduce production exp -> READINT 

State 14:
exp -> PRINTINT . exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
-- On WHILE shift to state 10
-- On STRING shift to state 12
-- On READINT shift to state 13
-- On PRINTINT shift to state 14
-- On NOT shift to state 15
-- On NEW shift to state 16
-- On LET shift to state 19
-- On INT shift to state 22
-- On IF shift to state 23
-- On EXCLAMATION shift to state 25
-- On exp shift to state 77

State 15:
exp -> NOT . exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
-- On WHILE shift to state 10
-- On STRING shift to state 12
-- On READINT shift to state 13
-- On PRINTINT shift to state 14
-- On NOT shift to state 15
-- On NEW shift to state 16
-- On LET shift to state 19
-- On INT shift to state 22
-- On IF shift to state 23
-- On EXCLAMATION shift to state 25
-- On exp shift to state 76

State 16:
exp -> NEW . STRING EQUAL exp IN exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
-- On STRING shift to state 17

State 17:
exp -> NEW STRING . EQUAL exp IN exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
-- On EQUAL shift to state 18

State 18:
exp -> NEW STRING EQUAL . exp IN exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
-- On WHILE shift to state 10
-- On STRING shift to state 12
-- On READINT shift to state 13
-- On PRINTINT shift to state 14
-- On NOT shift to state 15
-- On NEW shift to state 16
-- On LET shift to state 19
-- On INT shift to state 22
-- On IF shift to state 23
-- On EXCLAMATION shift to state 25
-- On exp shift to state 73

State 19:
exp -> LET . STRING EQUAL exp IN exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
-- On STRING shift to state 20

State 20:
exp -> LET STRING . EQUAL exp IN exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
-- On EQUAL shift to state 21

State 21:
exp -> LET STRING EQUAL . exp IN exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
-- On WHILE shift to state 10
-- On STRING shift to state 12
-- On READINT shift to state 13
-- On PRINTINT shift to state 14
-- On NOT shift to state 15
-- On NEW shift to state 16
-- On LET shift to state 19
-- On INT shift to state 22
-- On IF shift to state 23
-- On EXCLAMATION shift to state 25
-- On exp shift to state 70

State 22:
exp -> INT . [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
-- On TIMES reduce production exp -> INT 
-- On SEMIC reduce production exp -> INT 
-- On RPAREN reduce production exp -> INT 
-- On RBRACE reduce production exp -> INT 
-- On PLUS reduce production exp -> INT 
-- On OR reduce production exp -> INT 
-- On MINUS reduce production exp -> INT 
-- On LPAREN reduce production exp -> INT 
-- On LEQ reduce production exp -> INT 
-- On IN reduce production exp -> INT 
-- On GEQ reduce production exp -> INT 
-- On FULLSTOP reduce production exp -> INT 
-- On EXCLAMATION reduce production exp -> INT 
-- On EQUAL reduce production exp -> INT 
-- On EOF reduce production exp -> INT 
-- On DIV reduce production exp -> INT 
-- On COMMA reduce production exp -> INT 
-- On COLON reduce production exp -> INT 
-- On AND reduce production exp -> INT 

State 23:
exp -> IF . LPAREN exp RPAREN DO LBRACE exp RBRACE ELSE LBRACE exp RBRACE [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
-- On LPAREN shift to state 24

State 24:
exp -> IF LPAREN . exp RPAREN DO LBRACE exp RBRACE ELSE LBRACE exp RBRACE [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
-- On WHILE shift to state 10
-- On STRING shift to state 12
-- On READINT shift to state 13
-- On PRINTINT shift to state 14
-- On NOT shift to state 15
-- On NEW shift to state 16
-- On LET shift to state 19
-- On INT shift to state 22
-- On IF shift to state 23
-- On EXCLAMATION shift to state 25
-- On exp shift to state 60

State 25:
exp -> EXCLAMATION . exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
-- On WHILE shift to state 10
-- On STRING shift to state 12
-- On READINT shift to state 13
-- On PRINTINT shift to state 14
-- On NOT shift to state 15
-- On NEW shift to state 16
-- On LET shift to state 19
-- On INT shift to state 22
-- On IF shift to state 23
-- On EXCLAMATION shift to state 25
-- On exp shift to state 26

State 26:
exp -> exp . LPAREN loption(separated_nonempty_list(COMMA,exp)) RPAREN [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . TIMES exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . DIV exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . PLUS exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . MINUS exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . LEQ exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . GEQ exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . EQUAL exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . EXCLAMATION EQUAL exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . SEMIC exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . AND exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . OR exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . COLON EQUAL exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> EXCLAMATION exp . [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
-- On EXCLAMATION shift to state 27
-- On TIMES reduce production exp -> EXCLAMATION exp 
-- On SEMIC reduce production exp -> EXCLAMATION exp 
-- On RPAREN reduce production exp -> EXCLAMATION exp 
-- On RBRACE reduce production exp -> EXCLAMATION exp 
-- On PLUS reduce production exp -> EXCLAMATION exp 
-- On OR reduce production exp -> EXCLAMATION exp 
-- On MINUS reduce production exp -> EXCLAMATION exp 
-- On LPAREN reduce production exp -> EXCLAMATION exp 
-- On LEQ reduce production exp -> EXCLAMATION exp 
-- On IN reduce production exp -> EXCLAMATION exp 
-- On GEQ reduce production exp -> EXCLAMATION exp 
-- On FULLSTOP reduce production exp -> EXCLAMATION exp 
-- On EQUAL reduce production exp -> EXCLAMATION exp 
-- On EOF reduce production exp -> EXCLAMATION exp 
-- On DIV reduce production exp -> EXCLAMATION exp 
-- On COMMA reduce production exp -> EXCLAMATION exp 
-- On COLON reduce production exp -> EXCLAMATION exp 
-- On AND reduce production exp -> EXCLAMATION exp 

State 27:
exp -> exp EXCLAMATION . EQUAL exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
-- On EQUAL shift to state 28

State 28:
exp -> exp EXCLAMATION EQUAL . exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
-- On WHILE shift to state 10
-- On STRING shift to state 12
-- On READINT shift to state 13
-- On PRINTINT shift to state 14
-- On NOT shift to state 15
-- On NEW shift to state 16
-- On LET shift to state 19
-- On INT shift to state 22
-- On IF shift to state 23
-- On EXCLAMATION shift to state 25
-- On exp shift to state 29

State 29:
exp -> exp . LPAREN loption(separated_nonempty_list(COMMA,exp)) RPAREN [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . TIMES exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . DIV exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . PLUS exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . MINUS exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . LEQ exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . GEQ exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . EQUAL exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . EXCLAMATION EQUAL exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp EXCLAMATION EQUAL exp . [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . SEMIC exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . AND exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . OR exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . COLON EQUAL exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
-- On TIMES shift to state 30
-- On PLUS shift to state 39
-- On MINUS shift to state 46
-- On LPAREN shift to state 32
-- On LEQ shift to state 48
-- On GEQ shift to state 50
-- On EXCLAMATION shift to state 27
-- On DIV shift to state 41
-- On COLON shift to state 43
-- On SEMIC reduce production exp -> exp EXCLAMATION EQUAL exp 
-- On RPAREN reduce production exp -> exp EXCLAMATION EQUAL exp 
-- On RBRACE reduce production exp -> exp EXCLAMATION EQUAL exp 
-- On OR reduce production exp -> exp EXCLAMATION EQUAL exp 
-- On IN reduce production exp -> exp EXCLAMATION EQUAL exp 
-- On FULLSTOP reduce production exp -> exp EXCLAMATION EQUAL exp 
-- On EQUAL reduce production exp -> exp EXCLAMATION EQUAL exp 
-- On EOF reduce production exp -> exp EXCLAMATION EQUAL exp 
-- On COMMA reduce production exp -> exp EXCLAMATION EQUAL exp 
-- On AND reduce production exp -> exp EXCLAMATION EQUAL exp 

State 30:
exp -> exp TIMES . exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
-- On WHILE shift to state 10
-- On STRING shift to state 12
-- On READINT shift to state 13
-- On PRINTINT shift to state 14
-- On NOT shift to state 15
-- On NEW shift to state 16
-- On LET shift to state 19
-- On INT shift to state 22
-- On IF shift to state 23
-- On EXCLAMATION shift to state 25
-- On exp shift to state 31

State 31:
exp -> exp . LPAREN loption(separated_nonempty_list(COMMA,exp)) RPAREN [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . TIMES exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp TIMES exp . [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . DIV exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . PLUS exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . MINUS exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . LEQ exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . GEQ exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . EQUAL exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . EXCLAMATION EQUAL exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . SEMIC exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . AND exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . OR exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . COLON EQUAL exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
-- On LPAREN shift to state 32
-- On EXCLAMATION shift to state 27
-- On COLON shift to state 43
-- On TIMES reduce production exp -> exp TIMES exp 
-- On SEMIC reduce production exp -> exp TIMES exp 
-- On RPAREN reduce production exp -> exp TIMES exp 
-- On RBRACE reduce production exp -> exp TIMES exp 
-- On PLUS reduce production exp -> exp TIMES exp 
-- On OR reduce production exp -> exp TIMES exp 
-- On MINUS reduce production exp -> exp TIMES exp 
-- On LEQ reduce production exp -> exp TIMES exp 
-- On IN reduce production exp -> exp TIMES exp 
-- On GEQ reduce production exp -> exp TIMES exp 
-- On FULLSTOP reduce production exp -> exp TIMES exp 
-- On EQUAL reduce production exp -> exp TIMES exp 
-- On EOF reduce production exp -> exp TIMES exp 
-- On DIV reduce production exp -> exp TIMES exp 
-- On COMMA reduce production exp -> exp TIMES exp 
-- On AND reduce production exp -> exp TIMES exp 

State 32:
exp -> exp LPAREN . loption(separated_nonempty_list(COMMA,exp)) RPAREN [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
-- On WHILE shift to state 10
-- On STRING shift to state 12
-- On READINT shift to state 13
-- On PRINTINT shift to state 14
-- On NOT shift to state 15
-- On NEW shift to state 16
-- On LET shift to state 19
-- On INT shift to state 22
-- On IF shift to state 23
-- On EXCLAMATION shift to state 25
-- On separated_nonempty_list(COMMA,exp) shift to state 33
-- On loption(separated_nonempty_list(COMMA,exp)) shift to state 34
-- On exp shift to state 36
-- On RPAREN reduce production loption(separated_nonempty_list(COMMA,exp)) -> 

State 33:
loption(separated_nonempty_list(COMMA,exp)) -> separated_nonempty_list(COMMA,exp) . [ RPAREN ]
-- On RPAREN reduce production loption(separated_nonempty_list(COMMA,exp)) -> separated_nonempty_list(COMMA,exp) 

State 34:
exp -> exp LPAREN loption(separated_nonempty_list(COMMA,exp)) . RPAREN [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
-- On RPAREN shift to state 35

State 35:
exp -> exp LPAREN loption(separated_nonempty_list(COMMA,exp)) RPAREN . [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
-- On TIMES reduce production exp -> exp LPAREN loption(separated_nonempty_list(COMMA,exp)) RPAREN 
-- On SEMIC reduce production exp -> exp LPAREN loption(separated_nonempty_list(COMMA,exp)) RPAREN 
-- On RPAREN reduce production exp -> exp LPAREN loption(separated_nonempty_list(COMMA,exp)) RPAREN 
-- On RBRACE reduce production exp -> exp LPAREN loption(separated_nonempty_list(COMMA,exp)) RPAREN 
-- On PLUS reduce production exp -> exp LPAREN loption(separated_nonempty_list(COMMA,exp)) RPAREN 
-- On OR reduce production exp -> exp LPAREN loption(separated_nonempty_list(COMMA,exp)) RPAREN 
-- On MINUS reduce production exp -> exp LPAREN loption(separated_nonempty_list(COMMA,exp)) RPAREN 
-- On LPAREN reduce production exp -> exp LPAREN loption(separated_nonempty_list(COMMA,exp)) RPAREN 
-- On LEQ reduce production exp -> exp LPAREN loption(separated_nonempty_list(COMMA,exp)) RPAREN 
-- On IN reduce production exp -> exp LPAREN loption(separated_nonempty_list(COMMA,exp)) RPAREN 
-- On GEQ reduce production exp -> exp LPAREN loption(separated_nonempty_list(COMMA,exp)) RPAREN 
-- On FULLSTOP reduce production exp -> exp LPAREN loption(separated_nonempty_list(COMMA,exp)) RPAREN 
-- On EXCLAMATION reduce production exp -> exp LPAREN loption(separated_nonempty_list(COMMA,exp)) RPAREN 
-- On EQUAL reduce production exp -> exp LPAREN loption(separated_nonempty_list(COMMA,exp)) RPAREN 
-- On EOF reduce production exp -> exp LPAREN loption(separated_nonempty_list(COMMA,exp)) RPAREN 
-- On DIV reduce production exp -> exp LPAREN loption(separated_nonempty_list(COMMA,exp)) RPAREN 
-- On COMMA reduce production exp -> exp LPAREN loption(separated_nonempty_list(COMMA,exp)) RPAREN 
-- On COLON reduce production exp -> exp LPAREN loption(separated_nonempty_list(COMMA,exp)) RPAREN 
-- On AND reduce production exp -> exp LPAREN loption(separated_nonempty_list(COMMA,exp)) RPAREN 

State 36:
exp -> exp . LPAREN loption(separated_nonempty_list(COMMA,exp)) RPAREN [ TIMES SEMIC RPAREN PLUS OR MINUS LPAREN LEQ GEQ EXCLAMATION EQUAL DIV COMMA COLON AND ]
exp -> exp . TIMES exp [ TIMES SEMIC RPAREN PLUS OR MINUS LPAREN LEQ GEQ EXCLAMATION EQUAL DIV COMMA COLON AND ]
exp -> exp . DIV exp [ TIMES SEMIC RPAREN PLUS OR MINUS LPAREN LEQ GEQ EXCLAMATION EQUAL DIV COMMA COLON AND ]
exp -> exp . PLUS exp [ TIMES SEMIC RPAREN PLUS OR MINUS LPAREN LEQ GEQ EXCLAMATION EQUAL DIV COMMA COLON AND ]
exp -> exp . MINUS exp [ TIMES SEMIC RPAREN PLUS OR MINUS LPAREN LEQ GEQ EXCLAMATION EQUAL DIV COMMA COLON AND ]
exp -> exp . LEQ exp [ TIMES SEMIC RPAREN PLUS OR MINUS LPAREN LEQ GEQ EXCLAMATION EQUAL DIV COMMA COLON AND ]
exp -> exp . GEQ exp [ TIMES SEMIC RPAREN PLUS OR MINUS LPAREN LEQ GEQ EXCLAMATION EQUAL DIV COMMA COLON AND ]
exp -> exp . EQUAL exp [ TIMES SEMIC RPAREN PLUS OR MINUS LPAREN LEQ GEQ EXCLAMATION EQUAL DIV COMMA COLON AND ]
exp -> exp . EXCLAMATION EQUAL exp [ TIMES SEMIC RPAREN PLUS OR MINUS LPAREN LEQ GEQ EXCLAMATION EQUAL DIV COMMA COLON AND ]
exp -> exp . SEMIC exp [ TIMES SEMIC RPAREN PLUS OR MINUS LPAREN LEQ GEQ EXCLAMATION EQUAL DIV COMMA COLON AND ]
exp -> exp . AND exp [ TIMES SEMIC RPAREN PLUS OR MINUS LPAREN LEQ GEQ EXCLAMATION EQUAL DIV COMMA COLON AND ]
exp -> exp . OR exp [ TIMES SEMIC RPAREN PLUS OR MINUS LPAREN LEQ GEQ EXCLAMATION EQUAL DIV COMMA COLON AND ]
exp -> exp . COLON EQUAL exp [ TIMES SEMIC RPAREN PLUS OR MINUS LPAREN LEQ GEQ EXCLAMATION EQUAL DIV COMMA COLON AND ]
separated_nonempty_list(COMMA,exp) -> exp . [ RPAREN ]
separated_nonempty_list(COMMA,exp) -> exp . COMMA separated_nonempty_list(COMMA,exp) [ RPAREN ]
-- On TIMES shift to state 30
-- On SEMIC shift to state 37
-- On PLUS shift to state 39
-- On OR shift to state 52
-- On MINUS shift to state 46
-- On LPAREN shift to state 32
-- On LEQ shift to state 48
-- On GEQ shift to state 50
-- On EXCLAMATION shift to state 27
-- On EQUAL shift to state 54
-- On DIV shift to state 41
-- On COMMA shift to state 58
-- On COLON shift to state 43
-- On AND shift to state 56
-- On RPAREN reduce production separated_nonempty_list(COMMA,exp) -> exp 

State 37:
exp -> exp SEMIC . exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
-- On WHILE shift to state 10
-- On STRING shift to state 12
-- On READINT shift to state 13
-- On PRINTINT shift to state 14
-- On NOT shift to state 15
-- On NEW shift to state 16
-- On LET shift to state 19
-- On INT shift to state 22
-- On IF shift to state 23
-- On EXCLAMATION shift to state 25
-- On exp shift to state 38

State 38:
exp -> exp . LPAREN loption(separated_nonempty_list(COMMA,exp)) RPAREN [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . TIMES exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . DIV exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . PLUS exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . MINUS exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . LEQ exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . GEQ exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . EQUAL exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . EXCLAMATION EQUAL exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . SEMIC exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp SEMIC exp . [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . AND exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . OR exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . COLON EQUAL exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
-- On TIMES shift to state 30
-- On PLUS shift to state 39
-- On OR shift to state 52
-- On MINUS shift to state 46
-- On LPAREN shift to state 32
-- On LEQ shift to state 48
-- On GEQ shift to state 50
-- On EXCLAMATION shift to state 27
-- On EQUAL shift to state 54
-- On DIV shift to state 41
-- On COLON shift to state 43
-- On AND shift to state 56
-- On SEMIC reduce production exp -> exp SEMIC exp 
-- On RPAREN reduce production exp -> exp SEMIC exp 
-- On RBRACE reduce production exp -> exp SEMIC exp 
-- On IN reduce production exp -> exp SEMIC exp 
-- On FULLSTOP reduce production exp -> exp SEMIC exp 
-- On EOF reduce production exp -> exp SEMIC exp 
-- On COMMA reduce production exp -> exp SEMIC exp 

State 39:
exp -> exp PLUS . exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
-- On WHILE shift to state 10
-- On STRING shift to state 12
-- On READINT shift to state 13
-- On PRINTINT shift to state 14
-- On NOT shift to state 15
-- On NEW shift to state 16
-- On LET shift to state 19
-- On INT shift to state 22
-- On IF shift to state 23
-- On EXCLAMATION shift to state 25
-- On exp shift to state 40

State 40:
exp -> exp . LPAREN loption(separated_nonempty_list(COMMA,exp)) RPAREN [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . TIMES exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . DIV exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . PLUS exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp PLUS exp . [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . MINUS exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . LEQ exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . GEQ exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . EQUAL exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . EXCLAMATION EQUAL exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . SEMIC exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . AND exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . OR exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . COLON EQUAL exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
-- On TIMES shift to state 30
-- On LPAREN shift to state 32
-- On EXCLAMATION shift to state 27
-- On DIV shift to state 41
-- On COLON shift to state 43
-- On SEMIC reduce production exp -> exp PLUS exp 
-- On RPAREN reduce production exp -> exp PLUS exp 
-- On RBRACE reduce production exp -> exp PLUS exp 
-- On PLUS reduce production exp -> exp PLUS exp 
-- On OR reduce production exp -> exp PLUS exp 
-- On MINUS reduce production exp -> exp PLUS exp 
-- On LEQ reduce production exp -> exp PLUS exp 
-- On IN reduce production exp -> exp PLUS exp 
-- On GEQ reduce production exp -> exp PLUS exp 
-- On FULLSTOP reduce production exp -> exp PLUS exp 
-- On EQUAL reduce production exp -> exp PLUS exp 
-- On EOF reduce production exp -> exp PLUS exp 
-- On COMMA reduce production exp -> exp PLUS exp 
-- On AND reduce production exp -> exp PLUS exp 

State 41:
exp -> exp DIV . exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
-- On WHILE shift to state 10
-- On STRING shift to state 12
-- On READINT shift to state 13
-- On PRINTINT shift to state 14
-- On NOT shift to state 15
-- On NEW shift to state 16
-- On LET shift to state 19
-- On INT shift to state 22
-- On IF shift to state 23
-- On EXCLAMATION shift to state 25
-- On exp shift to state 42

State 42:
exp -> exp . LPAREN loption(separated_nonempty_list(COMMA,exp)) RPAREN [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . TIMES exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . DIV exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp DIV exp . [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . PLUS exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . MINUS exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . LEQ exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . GEQ exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . EQUAL exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . EXCLAMATION EQUAL exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . SEMIC exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . AND exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . OR exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . COLON EQUAL exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
-- On LPAREN shift to state 32
-- On EXCLAMATION shift to state 27
-- On COLON shift to state 43
-- On TIMES reduce production exp -> exp DIV exp 
-- On SEMIC reduce production exp -> exp DIV exp 
-- On RPAREN reduce production exp -> exp DIV exp 
-- On RBRACE reduce production exp -> exp DIV exp 
-- On PLUS reduce production exp -> exp DIV exp 
-- On OR reduce production exp -> exp DIV exp 
-- On MINUS reduce production exp -> exp DIV exp 
-- On LEQ reduce production exp -> exp DIV exp 
-- On IN reduce production exp -> exp DIV exp 
-- On GEQ reduce production exp -> exp DIV exp 
-- On FULLSTOP reduce production exp -> exp DIV exp 
-- On EQUAL reduce production exp -> exp DIV exp 
-- On EOF reduce production exp -> exp DIV exp 
-- On DIV reduce production exp -> exp DIV exp 
-- On COMMA reduce production exp -> exp DIV exp 
-- On AND reduce production exp -> exp DIV exp 

State 43:
exp -> exp COLON . EQUAL exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
-- On EQUAL shift to state 44

State 44:
exp -> exp COLON EQUAL . exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
-- On WHILE shift to state 10
-- On STRING shift to state 12
-- On READINT shift to state 13
-- On PRINTINT shift to state 14
-- On NOT shift to state 15
-- On NEW shift to state 16
-- On LET shift to state 19
-- On INT shift to state 22
-- On IF shift to state 23
-- On EXCLAMATION shift to state 25
-- On exp shift to state 45

State 45:
exp -> exp . LPAREN loption(separated_nonempty_list(COMMA,exp)) RPAREN [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . TIMES exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . DIV exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . PLUS exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . MINUS exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . LEQ exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . GEQ exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . EQUAL exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . EXCLAMATION EQUAL exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . SEMIC exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . AND exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . OR exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . COLON EQUAL exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp COLON EQUAL exp . [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
-- On TIMES shift to state 30
-- On PLUS shift to state 39
-- On MINUS shift to state 46
-- On LPAREN shift to state 32
-- On LEQ shift to state 48
-- On GEQ shift to state 50
-- On EXCLAMATION shift to state 27
-- On DIV shift to state 41
-- On COLON shift to state 43
-- On SEMIC reduce production exp -> exp COLON EQUAL exp 
-- On RPAREN reduce production exp -> exp COLON EQUAL exp 
-- On RBRACE reduce production exp -> exp COLON EQUAL exp 
-- On OR reduce production exp -> exp COLON EQUAL exp 
-- On IN reduce production exp -> exp COLON EQUAL exp 
-- On FULLSTOP reduce production exp -> exp COLON EQUAL exp 
-- On EQUAL reduce production exp -> exp COLON EQUAL exp 
-- On EOF reduce production exp -> exp COLON EQUAL exp 
-- On COMMA reduce production exp -> exp COLON EQUAL exp 
-- On AND reduce production exp -> exp COLON EQUAL exp 

State 46:
exp -> exp MINUS . exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
-- On WHILE shift to state 10
-- On STRING shift to state 12
-- On READINT shift to state 13
-- On PRINTINT shift to state 14
-- On NOT shift to state 15
-- On NEW shift to state 16
-- On LET shift to state 19
-- On INT shift to state 22
-- On IF shift to state 23
-- On EXCLAMATION shift to state 25
-- On exp shift to state 47

State 47:
exp -> exp . LPAREN loption(separated_nonempty_list(COMMA,exp)) RPAREN [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . TIMES exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . DIV exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . PLUS exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . MINUS exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp MINUS exp . [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . LEQ exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . GEQ exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . EQUAL exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . EXCLAMATION EQUAL exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . SEMIC exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . AND exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . OR exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . COLON EQUAL exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
-- On TIMES shift to state 30
-- On LPAREN shift to state 32
-- On EXCLAMATION shift to state 27
-- On DIV shift to state 41
-- On COLON shift to state 43
-- On SEMIC reduce production exp -> exp MINUS exp 
-- On RPAREN reduce production exp -> exp MINUS exp 
-- On RBRACE reduce production exp -> exp MINUS exp 
-- On PLUS reduce production exp -> exp MINUS exp 
-- On OR reduce production exp -> exp MINUS exp 
-- On MINUS reduce production exp -> exp MINUS exp 
-- On LEQ reduce production exp -> exp MINUS exp 
-- On IN reduce production exp -> exp MINUS exp 
-- On GEQ reduce production exp -> exp MINUS exp 
-- On FULLSTOP reduce production exp -> exp MINUS exp 
-- On EQUAL reduce production exp -> exp MINUS exp 
-- On EOF reduce production exp -> exp MINUS exp 
-- On COMMA reduce production exp -> exp MINUS exp 
-- On AND reduce production exp -> exp MINUS exp 

State 48:
exp -> exp LEQ . exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
-- On WHILE shift to state 10
-- On STRING shift to state 12
-- On READINT shift to state 13
-- On PRINTINT shift to state 14
-- On NOT shift to state 15
-- On NEW shift to state 16
-- On LET shift to state 19
-- On INT shift to state 22
-- On IF shift to state 23
-- On EXCLAMATION shift to state 25
-- On exp shift to state 49

State 49:
exp -> exp . LPAREN loption(separated_nonempty_list(COMMA,exp)) RPAREN [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . TIMES exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . DIV exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . PLUS exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . MINUS exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . LEQ exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp LEQ exp . [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . GEQ exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . EQUAL exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . EXCLAMATION EQUAL exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . SEMIC exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . AND exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . OR exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . COLON EQUAL exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
-- On TIMES shift to state 30
-- On PLUS shift to state 39
-- On MINUS shift to state 46
-- On LPAREN shift to state 32
-- On EXCLAMATION shift to state 27
-- On DIV shift to state 41
-- On COLON shift to state 43
-- On SEMIC reduce production exp -> exp LEQ exp 
-- On RPAREN reduce production exp -> exp LEQ exp 
-- On RBRACE reduce production exp -> exp LEQ exp 
-- On OR reduce production exp -> exp LEQ exp 
-- On LEQ reduce production exp -> exp LEQ exp 
-- On IN reduce production exp -> exp LEQ exp 
-- On GEQ reduce production exp -> exp LEQ exp 
-- On FULLSTOP reduce production exp -> exp LEQ exp 
-- On EQUAL reduce production exp -> exp LEQ exp 
-- On EOF reduce production exp -> exp LEQ exp 
-- On COMMA reduce production exp -> exp LEQ exp 
-- On AND reduce production exp -> exp LEQ exp 

State 50:
exp -> exp GEQ . exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
-- On WHILE shift to state 10
-- On STRING shift to state 12
-- On READINT shift to state 13
-- On PRINTINT shift to state 14
-- On NOT shift to state 15
-- On NEW shift to state 16
-- On LET shift to state 19
-- On INT shift to state 22
-- On IF shift to state 23
-- On EXCLAMATION shift to state 25
-- On exp shift to state 51

State 51:
exp -> exp . LPAREN loption(separated_nonempty_list(COMMA,exp)) RPAREN [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . TIMES exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . DIV exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . PLUS exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . MINUS exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . LEQ exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . GEQ exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp GEQ exp . [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . EQUAL exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . EXCLAMATION EQUAL exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . SEMIC exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . AND exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . OR exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . COLON EQUAL exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
-- On TIMES shift to state 30
-- On PLUS shift to state 39
-- On MINUS shift to state 46
-- On LPAREN shift to state 32
-- On EXCLAMATION shift to state 27
-- On DIV shift to state 41
-- On COLON shift to state 43
-- On SEMIC reduce production exp -> exp GEQ exp 
-- On RPAREN reduce production exp -> exp GEQ exp 
-- On RBRACE reduce production exp -> exp GEQ exp 
-- On OR reduce production exp -> exp GEQ exp 
-- On LEQ reduce production exp -> exp GEQ exp 
-- On IN reduce production exp -> exp GEQ exp 
-- On GEQ reduce production exp -> exp GEQ exp 
-- On FULLSTOP reduce production exp -> exp GEQ exp 
-- On EQUAL reduce production exp -> exp GEQ exp 
-- On EOF reduce production exp -> exp GEQ exp 
-- On COMMA reduce production exp -> exp GEQ exp 
-- On AND reduce production exp -> exp GEQ exp 

State 52:
exp -> exp OR . exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
-- On WHILE shift to state 10
-- On STRING shift to state 12
-- On READINT shift to state 13
-- On PRINTINT shift to state 14
-- On NOT shift to state 15
-- On NEW shift to state 16
-- On LET shift to state 19
-- On INT shift to state 22
-- On IF shift to state 23
-- On EXCLAMATION shift to state 25
-- On exp shift to state 53

State 53:
exp -> exp . LPAREN loption(separated_nonempty_list(COMMA,exp)) RPAREN [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . TIMES exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . DIV exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . PLUS exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . MINUS exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . LEQ exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . GEQ exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . EQUAL exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . EXCLAMATION EQUAL exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . SEMIC exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . AND exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . OR exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp OR exp . [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . COLON EQUAL exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
-- On TIMES shift to state 30
-- On PLUS shift to state 39
-- On MINUS shift to state 46
-- On LPAREN shift to state 32
-- On LEQ shift to state 48
-- On GEQ shift to state 50
-- On EXCLAMATION shift to state 27
-- On EQUAL shift to state 54
-- On DIV shift to state 41
-- On COLON shift to state 43
-- On AND shift to state 56
-- On SEMIC reduce production exp -> exp OR exp 
-- On RPAREN reduce production exp -> exp OR exp 
-- On RBRACE reduce production exp -> exp OR exp 
-- On OR reduce production exp -> exp OR exp 
-- On IN reduce production exp -> exp OR exp 
-- On FULLSTOP reduce production exp -> exp OR exp 
-- On EOF reduce production exp -> exp OR exp 
-- On COMMA reduce production exp -> exp OR exp 

State 54:
exp -> exp EQUAL . exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
-- On WHILE shift to state 10
-- On STRING shift to state 12
-- On READINT shift to state 13
-- On PRINTINT shift to state 14
-- On NOT shift to state 15
-- On NEW shift to state 16
-- On LET shift to state 19
-- On INT shift to state 22
-- On IF shift to state 23
-- On EXCLAMATION shift to state 25
-- On exp shift to state 55

State 55:
exp -> exp . LPAREN loption(separated_nonempty_list(COMMA,exp)) RPAREN [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . TIMES exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . DIV exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . PLUS exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . MINUS exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . LEQ exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . GEQ exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . EQUAL exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp EQUAL exp . [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . EXCLAMATION EQUAL exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . SEMIC exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . AND exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . OR exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . COLON EQUAL exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
-- On TIMES shift to state 30
-- On PLUS shift to state 39
-- On MINUS shift to state 46
-- On LPAREN shift to state 32
-- On LEQ shift to state 48
-- On GEQ shift to state 50
-- On EXCLAMATION shift to state 27
-- On DIV shift to state 41
-- On COLON shift to state 43
-- On SEMIC reduce production exp -> exp EQUAL exp 
-- On RPAREN reduce production exp -> exp EQUAL exp 
-- On RBRACE reduce production exp -> exp EQUAL exp 
-- On OR reduce production exp -> exp EQUAL exp 
-- On IN reduce production exp -> exp EQUAL exp 
-- On FULLSTOP reduce production exp -> exp EQUAL exp 
-- On EQUAL reduce production exp -> exp EQUAL exp 
-- On EOF reduce production exp -> exp EQUAL exp 
-- On COMMA reduce production exp -> exp EQUAL exp 
-- On AND reduce production exp -> exp EQUAL exp 

State 56:
exp -> exp AND . exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
-- On WHILE shift to state 10
-- On STRING shift to state 12
-- On READINT shift to state 13
-- On PRINTINT shift to state 14
-- On NOT shift to state 15
-- On NEW shift to state 16
-- On LET shift to state 19
-- On INT shift to state 22
-- On IF shift to state 23
-- On EXCLAMATION shift to state 25
-- On exp shift to state 57

State 57:
exp -> exp . LPAREN loption(separated_nonempty_list(COMMA,exp)) RPAREN [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . TIMES exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . DIV exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . PLUS exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . MINUS exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . LEQ exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . GEQ exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . EQUAL exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . EXCLAMATION EQUAL exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . SEMIC exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . AND exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp AND exp . [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . OR exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . COLON EQUAL exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
-- On TIMES shift to state 30
-- On PLUS shift to state 39
-- On MINUS shift to state 46
-- On LPAREN shift to state 32
-- On LEQ shift to state 48
-- On GEQ shift to state 50
-- On EXCLAMATION shift to state 27
-- On EQUAL shift to state 54
-- On DIV shift to state 41
-- On COLON shift to state 43
-- On SEMIC reduce production exp -> exp AND exp 
-- On RPAREN reduce production exp -> exp AND exp 
-- On RBRACE reduce production exp -> exp AND exp 
-- On OR reduce production exp -> exp AND exp 
-- On IN reduce production exp -> exp AND exp 
-- On FULLSTOP reduce production exp -> exp AND exp 
-- On EOF reduce production exp -> exp AND exp 
-- On COMMA reduce production exp -> exp AND exp 
-- On AND reduce production exp -> exp AND exp 

State 58:
separated_nonempty_list(COMMA,exp) -> exp COMMA . separated_nonempty_list(COMMA,exp) [ RPAREN ]
-- On WHILE shift to state 10
-- On STRING shift to state 12
-- On READINT shift to state 13
-- On PRINTINT shift to state 14
-- On NOT shift to state 15
-- On NEW shift to state 16
-- On LET shift to state 19
-- On INT shift to state 22
-- On IF shift to state 23
-- On EXCLAMATION shift to state 25
-- On separated_nonempty_list(COMMA,exp) shift to state 59
-- On exp shift to state 36

State 59:
separated_nonempty_list(COMMA,exp) -> exp COMMA separated_nonempty_list(COMMA,exp) . [ RPAREN ]
-- On RPAREN reduce production separated_nonempty_list(COMMA,exp) -> exp COMMA separated_nonempty_list(COMMA,exp) 

State 60:
exp -> exp . LPAREN loption(separated_nonempty_list(COMMA,exp)) RPAREN [ TIMES SEMIC RPAREN PLUS OR MINUS LPAREN LEQ GEQ EXCLAMATION EQUAL DIV COLON AND ]
exp -> exp . TIMES exp [ TIMES SEMIC RPAREN PLUS OR MINUS LPAREN LEQ GEQ EXCLAMATION EQUAL DIV COLON AND ]
exp -> exp . DIV exp [ TIMES SEMIC RPAREN PLUS OR MINUS LPAREN LEQ GEQ EXCLAMATION EQUAL DIV COLON AND ]
exp -> exp . PLUS exp [ TIMES SEMIC RPAREN PLUS OR MINUS LPAREN LEQ GEQ EXCLAMATION EQUAL DIV COLON AND ]
exp -> exp . MINUS exp [ TIMES SEMIC RPAREN PLUS OR MINUS LPAREN LEQ GEQ EXCLAMATION EQUAL DIV COLON AND ]
exp -> exp . LEQ exp [ TIMES SEMIC RPAREN PLUS OR MINUS LPAREN LEQ GEQ EXCLAMATION EQUAL DIV COLON AND ]
exp -> exp . GEQ exp [ TIMES SEMIC RPAREN PLUS OR MINUS LPAREN LEQ GEQ EXCLAMATION EQUAL DIV COLON AND ]
exp -> exp . EQUAL exp [ TIMES SEMIC RPAREN PLUS OR MINUS LPAREN LEQ GEQ EXCLAMATION EQUAL DIV COLON AND ]
exp -> exp . EXCLAMATION EQUAL exp [ TIMES SEMIC RPAREN PLUS OR MINUS LPAREN LEQ GEQ EXCLAMATION EQUAL DIV COLON AND ]
exp -> exp . SEMIC exp [ TIMES SEMIC RPAREN PLUS OR MINUS LPAREN LEQ GEQ EXCLAMATION EQUAL DIV COLON AND ]
exp -> exp . AND exp [ TIMES SEMIC RPAREN PLUS OR MINUS LPAREN LEQ GEQ EXCLAMATION EQUAL DIV COLON AND ]
exp -> exp . OR exp [ TIMES SEMIC RPAREN PLUS OR MINUS LPAREN LEQ GEQ EXCLAMATION EQUAL DIV COLON AND ]
exp -> exp . COLON EQUAL exp [ TIMES SEMIC RPAREN PLUS OR MINUS LPAREN LEQ GEQ EXCLAMATION EQUAL DIV COLON AND ]
exp -> IF LPAREN exp . RPAREN DO LBRACE exp RBRACE ELSE LBRACE exp RBRACE [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
-- On TIMES shift to state 30
-- On SEMIC shift to state 37
-- On RPAREN shift to state 61
-- On PLUS shift to state 39
-- On OR shift to state 52
-- On MINUS shift to state 46
-- On LPAREN shift to state 32
-- On LEQ shift to state 48
-- On GEQ shift to state 50
-- On EXCLAMATION shift to state 27
-- On EQUAL shift to state 54
-- On DIV shift to state 41
-- On COLON shift to state 43
-- On AND shift to state 56

State 61:
exp -> IF LPAREN exp RPAREN . DO LBRACE exp RBRACE ELSE LBRACE exp RBRACE [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
-- On DO shift to state 62

State 62:
exp -> IF LPAREN exp RPAREN DO . LBRACE exp RBRACE ELSE LBRACE exp RBRACE [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
-- On LBRACE shift to state 63

State 63:
exp -> IF LPAREN exp RPAREN DO LBRACE . exp RBRACE ELSE LBRACE exp RBRACE [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
-- On WHILE shift to state 10
-- On STRING shift to state 12
-- On READINT shift to state 13
-- On PRINTINT shift to state 14
-- On NOT shift to state 15
-- On NEW shift to state 16
-- On LET shift to state 19
-- On INT shift to state 22
-- On IF shift to state 23
-- On EXCLAMATION shift to state 25
-- On exp shift to state 64

State 64:
exp -> exp . LPAREN loption(separated_nonempty_list(COMMA,exp)) RPAREN [ TIMES SEMIC RBRACE PLUS OR MINUS LPAREN LEQ GEQ EXCLAMATION EQUAL DIV COLON AND ]
exp -> exp . TIMES exp [ TIMES SEMIC RBRACE PLUS OR MINUS LPAREN LEQ GEQ EXCLAMATION EQUAL DIV COLON AND ]
exp -> exp . DIV exp [ TIMES SEMIC RBRACE PLUS OR MINUS LPAREN LEQ GEQ EXCLAMATION EQUAL DIV COLON AND ]
exp -> exp . PLUS exp [ TIMES SEMIC RBRACE PLUS OR MINUS LPAREN LEQ GEQ EXCLAMATION EQUAL DIV COLON AND ]
exp -> exp . MINUS exp [ TIMES SEMIC RBRACE PLUS OR MINUS LPAREN LEQ GEQ EXCLAMATION EQUAL DIV COLON AND ]
exp -> exp . LEQ exp [ TIMES SEMIC RBRACE PLUS OR MINUS LPAREN LEQ GEQ EXCLAMATION EQUAL DIV COLON AND ]
exp -> exp . GEQ exp [ TIMES SEMIC RBRACE PLUS OR MINUS LPAREN LEQ GEQ EXCLAMATION EQUAL DIV COLON AND ]
exp -> exp . EQUAL exp [ TIMES SEMIC RBRACE PLUS OR MINUS LPAREN LEQ GEQ EXCLAMATION EQUAL DIV COLON AND ]
exp -> exp . EXCLAMATION EQUAL exp [ TIMES SEMIC RBRACE PLUS OR MINUS LPAREN LEQ GEQ EXCLAMATION EQUAL DIV COLON AND ]
exp -> exp . SEMIC exp [ TIMES SEMIC RBRACE PLUS OR MINUS LPAREN LEQ GEQ EXCLAMATION EQUAL DIV COLON AND ]
exp -> exp . AND exp [ TIMES SEMIC RBRACE PLUS OR MINUS LPAREN LEQ GEQ EXCLAMATION EQUAL DIV COLON AND ]
exp -> exp . OR exp [ TIMES SEMIC RBRACE PLUS OR MINUS LPAREN LEQ GEQ EXCLAMATION EQUAL DIV COLON AND ]
exp -> exp . COLON EQUAL exp [ TIMES SEMIC RBRACE PLUS OR MINUS LPAREN LEQ GEQ EXCLAMATION EQUAL DIV COLON AND ]
exp -> IF LPAREN exp RPAREN DO LBRACE exp . RBRACE ELSE LBRACE exp RBRACE [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
-- On TIMES shift to state 30
-- On SEMIC shift to state 37
-- On RBRACE shift to state 65
-- On PLUS shift to state 39
-- On OR shift to state 52
-- On MINUS shift to state 46
-- On LPAREN shift to state 32
-- On LEQ shift to state 48
-- On GEQ shift to state 50
-- On EXCLAMATION shift to state 27
-- On EQUAL shift to state 54
-- On DIV shift to state 41
-- On COLON shift to state 43
-- On AND shift to state 56

State 65:
exp -> IF LPAREN exp RPAREN DO LBRACE exp RBRACE . ELSE LBRACE exp RBRACE [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
-- On ELSE shift to state 66

State 66:
exp -> IF LPAREN exp RPAREN DO LBRACE exp RBRACE ELSE . LBRACE exp RBRACE [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
-- On LBRACE shift to state 67

State 67:
exp -> IF LPAREN exp RPAREN DO LBRACE exp RBRACE ELSE LBRACE . exp RBRACE [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
-- On WHILE shift to state 10
-- On STRING shift to state 12
-- On READINT shift to state 13
-- On PRINTINT shift to state 14
-- On NOT shift to state 15
-- On NEW shift to state 16
-- On LET shift to state 19
-- On INT shift to state 22
-- On IF shift to state 23
-- On EXCLAMATION shift to state 25
-- On exp shift to state 68

State 68:
exp -> exp . LPAREN loption(separated_nonempty_list(COMMA,exp)) RPAREN [ TIMES SEMIC RBRACE PLUS OR MINUS LPAREN LEQ GEQ EXCLAMATION EQUAL DIV COLON AND ]
exp -> exp . TIMES exp [ TIMES SEMIC RBRACE PLUS OR MINUS LPAREN LEQ GEQ EXCLAMATION EQUAL DIV COLON AND ]
exp -> exp . DIV exp [ TIMES SEMIC RBRACE PLUS OR MINUS LPAREN LEQ GEQ EXCLAMATION EQUAL DIV COLON AND ]
exp -> exp . PLUS exp [ TIMES SEMIC RBRACE PLUS OR MINUS LPAREN LEQ GEQ EXCLAMATION EQUAL DIV COLON AND ]
exp -> exp . MINUS exp [ TIMES SEMIC RBRACE PLUS OR MINUS LPAREN LEQ GEQ EXCLAMATION EQUAL DIV COLON AND ]
exp -> exp . LEQ exp [ TIMES SEMIC RBRACE PLUS OR MINUS LPAREN LEQ GEQ EXCLAMATION EQUAL DIV COLON AND ]
exp -> exp . GEQ exp [ TIMES SEMIC RBRACE PLUS OR MINUS LPAREN LEQ GEQ EXCLAMATION EQUAL DIV COLON AND ]
exp -> exp . EQUAL exp [ TIMES SEMIC RBRACE PLUS OR MINUS LPAREN LEQ GEQ EXCLAMATION EQUAL DIV COLON AND ]
exp -> exp . EXCLAMATION EQUAL exp [ TIMES SEMIC RBRACE PLUS OR MINUS LPAREN LEQ GEQ EXCLAMATION EQUAL DIV COLON AND ]
exp -> exp . SEMIC exp [ TIMES SEMIC RBRACE PLUS OR MINUS LPAREN LEQ GEQ EXCLAMATION EQUAL DIV COLON AND ]
exp -> exp . AND exp [ TIMES SEMIC RBRACE PLUS OR MINUS LPAREN LEQ GEQ EXCLAMATION EQUAL DIV COLON AND ]
exp -> exp . OR exp [ TIMES SEMIC RBRACE PLUS OR MINUS LPAREN LEQ GEQ EXCLAMATION EQUAL DIV COLON AND ]
exp -> exp . COLON EQUAL exp [ TIMES SEMIC RBRACE PLUS OR MINUS LPAREN LEQ GEQ EXCLAMATION EQUAL DIV COLON AND ]
exp -> IF LPAREN exp RPAREN DO LBRACE exp RBRACE ELSE LBRACE exp . RBRACE [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
-- On TIMES shift to state 30
-- On SEMIC shift to state 37
-- On RBRACE shift to state 69
-- On PLUS shift to state 39
-- On OR shift to state 52
-- On MINUS shift to state 46
-- On LPAREN shift to state 32
-- On LEQ shift to state 48
-- On GEQ shift to state 50
-- On EXCLAMATION shift to state 27
-- On EQUAL shift to state 54
-- On DIV shift to state 41
-- On COLON shift to state 43
-- On AND shift to state 56

State 69:
exp -> IF LPAREN exp RPAREN DO LBRACE exp RBRACE ELSE LBRACE exp RBRACE . [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
-- On TIMES reduce production exp -> IF LPAREN exp RPAREN DO LBRACE exp RBRACE ELSE LBRACE exp RBRACE 
-- On SEMIC reduce production exp -> IF LPAREN exp RPAREN DO LBRACE exp RBRACE ELSE LBRACE exp RBRACE 
-- On RPAREN reduce production exp -> IF LPAREN exp RPAREN DO LBRACE exp RBRACE ELSE LBRACE exp RBRACE 
-- On RBRACE reduce production exp -> IF LPAREN exp RPAREN DO LBRACE exp RBRACE ELSE LBRACE exp RBRACE 
-- On PLUS reduce production exp -> IF LPAREN exp RPAREN DO LBRACE exp RBRACE ELSE LBRACE exp RBRACE 
-- On OR reduce production exp -> IF LPAREN exp RPAREN DO LBRACE exp RBRACE ELSE LBRACE exp RBRACE 
-- On MINUS reduce production exp -> IF LPAREN exp RPAREN DO LBRACE exp RBRACE ELSE LBRACE exp RBRACE 
-- On LPAREN reduce production exp -> IF LPAREN exp RPAREN DO LBRACE exp RBRACE ELSE LBRACE exp RBRACE 
-- On LEQ reduce production exp -> IF LPAREN exp RPAREN DO LBRACE exp RBRACE ELSE LBRACE exp RBRACE 
-- On IN reduce production exp -> IF LPAREN exp RPAREN DO LBRACE exp RBRACE ELSE LBRACE exp RBRACE 
-- On GEQ reduce production exp -> IF LPAREN exp RPAREN DO LBRACE exp RBRACE ELSE LBRACE exp RBRACE 
-- On FULLSTOP reduce production exp -> IF LPAREN exp RPAREN DO LBRACE exp RBRACE ELSE LBRACE exp RBRACE 
-- On EXCLAMATION reduce production exp -> IF LPAREN exp RPAREN DO LBRACE exp RBRACE ELSE LBRACE exp RBRACE 
-- On EQUAL reduce production exp -> IF LPAREN exp RPAREN DO LBRACE exp RBRACE ELSE LBRACE exp RBRACE 
-- On EOF reduce production exp -> IF LPAREN exp RPAREN DO LBRACE exp RBRACE ELSE LBRACE exp RBRACE 
-- On DIV reduce production exp -> IF LPAREN exp RPAREN DO LBRACE exp RBRACE ELSE LBRACE exp RBRACE 
-- On COMMA reduce production exp -> IF LPAREN exp RPAREN DO LBRACE exp RBRACE ELSE LBRACE exp RBRACE 
-- On COLON reduce production exp -> IF LPAREN exp RPAREN DO LBRACE exp RBRACE ELSE LBRACE exp RBRACE 
-- On AND reduce production exp -> IF LPAREN exp RPAREN DO LBRACE exp RBRACE ELSE LBRACE exp RBRACE 

State 70:
exp -> exp . LPAREN loption(separated_nonempty_list(COMMA,exp)) RPAREN [ TIMES SEMIC PLUS OR MINUS LPAREN LEQ IN GEQ EXCLAMATION EQUAL DIV COLON AND ]
exp -> exp . TIMES exp [ TIMES SEMIC PLUS OR MINUS LPAREN LEQ IN GEQ EXCLAMATION EQUAL DIV COLON AND ]
exp -> exp . DIV exp [ TIMES SEMIC PLUS OR MINUS LPAREN LEQ IN GEQ EXCLAMATION EQUAL DIV COLON AND ]
exp -> exp . PLUS exp [ TIMES SEMIC PLUS OR MINUS LPAREN LEQ IN GEQ EXCLAMATION EQUAL DIV COLON AND ]
exp -> exp . MINUS exp [ TIMES SEMIC PLUS OR MINUS LPAREN LEQ IN GEQ EXCLAMATION EQUAL DIV COLON AND ]
exp -> exp . LEQ exp [ TIMES SEMIC PLUS OR MINUS LPAREN LEQ IN GEQ EXCLAMATION EQUAL DIV COLON AND ]
exp -> exp . GEQ exp [ TIMES SEMIC PLUS OR MINUS LPAREN LEQ IN GEQ EXCLAMATION EQUAL DIV COLON AND ]
exp -> exp . EQUAL exp [ TIMES SEMIC PLUS OR MINUS LPAREN LEQ IN GEQ EXCLAMATION EQUAL DIV COLON AND ]
exp -> exp . EXCLAMATION EQUAL exp [ TIMES SEMIC PLUS OR MINUS LPAREN LEQ IN GEQ EXCLAMATION EQUAL DIV COLON AND ]
exp -> exp . SEMIC exp [ TIMES SEMIC PLUS OR MINUS LPAREN LEQ IN GEQ EXCLAMATION EQUAL DIV COLON AND ]
exp -> exp . AND exp [ TIMES SEMIC PLUS OR MINUS LPAREN LEQ IN GEQ EXCLAMATION EQUAL DIV COLON AND ]
exp -> exp . OR exp [ TIMES SEMIC PLUS OR MINUS LPAREN LEQ IN GEQ EXCLAMATION EQUAL DIV COLON AND ]
exp -> exp . COLON EQUAL exp [ TIMES SEMIC PLUS OR MINUS LPAREN LEQ IN GEQ EXCLAMATION EQUAL DIV COLON AND ]
exp -> LET STRING EQUAL exp . IN exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
-- On TIMES shift to state 30
-- On SEMIC shift to state 37
-- On PLUS shift to state 39
-- On OR shift to state 52
-- On MINUS shift to state 46
-- On LPAREN shift to state 32
-- On LEQ shift to state 48
-- On IN shift to state 71
-- On GEQ shift to state 50
-- On EXCLAMATION shift to state 27
-- On EQUAL shift to state 54
-- On DIV shift to state 41
-- On COLON shift to state 43
-- On AND shift to state 56

State 71:
exp -> LET STRING EQUAL exp IN . exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
-- On WHILE shift to state 10
-- On STRING shift to state 12
-- On READINT shift to state 13
-- On PRINTINT shift to state 14
-- On NOT shift to state 15
-- On NEW shift to state 16
-- On LET shift to state 19
-- On INT shift to state 22
-- On IF shift to state 23
-- On EXCLAMATION shift to state 25
-- On exp shift to state 72

State 72:
exp -> exp . LPAREN loption(separated_nonempty_list(COMMA,exp)) RPAREN [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . TIMES exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . DIV exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . PLUS exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . MINUS exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . LEQ exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . GEQ exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . EQUAL exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . EXCLAMATION EQUAL exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . SEMIC exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . AND exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . OR exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . COLON EQUAL exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> LET STRING EQUAL exp IN exp . [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
-- On TIMES shift to state 30
-- On PLUS shift to state 39
-- On OR shift to state 52
-- On MINUS shift to state 46
-- On LPAREN shift to state 32
-- On LEQ shift to state 48
-- On GEQ shift to state 50
-- On EXCLAMATION shift to state 27
-- On EQUAL shift to state 54
-- On DIV shift to state 41
-- On COLON shift to state 43
-- On AND shift to state 56
-- On SEMIC reduce production exp -> LET STRING EQUAL exp IN exp 
-- On RPAREN reduce production exp -> LET STRING EQUAL exp IN exp 
-- On RBRACE reduce production exp -> LET STRING EQUAL exp IN exp 
-- On IN reduce production exp -> LET STRING EQUAL exp IN exp 
-- On FULLSTOP reduce production exp -> LET STRING EQUAL exp IN exp 
-- On EOF reduce production exp -> LET STRING EQUAL exp IN exp 
-- On COMMA reduce production exp -> LET STRING EQUAL exp IN exp 

State 73:
exp -> exp . LPAREN loption(separated_nonempty_list(COMMA,exp)) RPAREN [ TIMES SEMIC PLUS OR MINUS LPAREN LEQ IN GEQ EXCLAMATION EQUAL DIV COLON AND ]
exp -> exp . TIMES exp [ TIMES SEMIC PLUS OR MINUS LPAREN LEQ IN GEQ EXCLAMATION EQUAL DIV COLON AND ]
exp -> exp . DIV exp [ TIMES SEMIC PLUS OR MINUS LPAREN LEQ IN GEQ EXCLAMATION EQUAL DIV COLON AND ]
exp -> exp . PLUS exp [ TIMES SEMIC PLUS OR MINUS LPAREN LEQ IN GEQ EXCLAMATION EQUAL DIV COLON AND ]
exp -> exp . MINUS exp [ TIMES SEMIC PLUS OR MINUS LPAREN LEQ IN GEQ EXCLAMATION EQUAL DIV COLON AND ]
exp -> exp . LEQ exp [ TIMES SEMIC PLUS OR MINUS LPAREN LEQ IN GEQ EXCLAMATION EQUAL DIV COLON AND ]
exp -> exp . GEQ exp [ TIMES SEMIC PLUS OR MINUS LPAREN LEQ IN GEQ EXCLAMATION EQUAL DIV COLON AND ]
exp -> exp . EQUAL exp [ TIMES SEMIC PLUS OR MINUS LPAREN LEQ IN GEQ EXCLAMATION EQUAL DIV COLON AND ]
exp -> exp . EXCLAMATION EQUAL exp [ TIMES SEMIC PLUS OR MINUS LPAREN LEQ IN GEQ EXCLAMATION EQUAL DIV COLON AND ]
exp -> exp . SEMIC exp [ TIMES SEMIC PLUS OR MINUS LPAREN LEQ IN GEQ EXCLAMATION EQUAL DIV COLON AND ]
exp -> exp . AND exp [ TIMES SEMIC PLUS OR MINUS LPAREN LEQ IN GEQ EXCLAMATION EQUAL DIV COLON AND ]
exp -> exp . OR exp [ TIMES SEMIC PLUS OR MINUS LPAREN LEQ IN GEQ EXCLAMATION EQUAL DIV COLON AND ]
exp -> exp . COLON EQUAL exp [ TIMES SEMIC PLUS OR MINUS LPAREN LEQ IN GEQ EXCLAMATION EQUAL DIV COLON AND ]
exp -> NEW STRING EQUAL exp . IN exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
-- On TIMES shift to state 30
-- On SEMIC shift to state 37
-- On PLUS shift to state 39
-- On OR shift to state 52
-- On MINUS shift to state 46
-- On LPAREN shift to state 32
-- On LEQ shift to state 48
-- On IN shift to state 74
-- On GEQ shift to state 50
-- On EXCLAMATION shift to state 27
-- On EQUAL shift to state 54
-- On DIV shift to state 41
-- On COLON shift to state 43
-- On AND shift to state 56

State 74:
exp -> NEW STRING EQUAL exp IN . exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
-- On WHILE shift to state 10
-- On STRING shift to state 12
-- On READINT shift to state 13
-- On PRINTINT shift to state 14
-- On NOT shift to state 15
-- On NEW shift to state 16
-- On LET shift to state 19
-- On INT shift to state 22
-- On IF shift to state 23
-- On EXCLAMATION shift to state 25
-- On exp shift to state 75

State 75:
exp -> exp . LPAREN loption(separated_nonempty_list(COMMA,exp)) RPAREN [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . TIMES exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . DIV exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . PLUS exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . MINUS exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . LEQ exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . GEQ exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . EQUAL exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . EXCLAMATION EQUAL exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . SEMIC exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . AND exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . OR exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . COLON EQUAL exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> NEW STRING EQUAL exp IN exp . [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
-- On TIMES shift to state 30
-- On PLUS shift to state 39
-- On OR shift to state 52
-- On MINUS shift to state 46
-- On LPAREN shift to state 32
-- On LEQ shift to state 48
-- On GEQ shift to state 50
-- On EXCLAMATION shift to state 27
-- On EQUAL shift to state 54
-- On DIV shift to state 41
-- On COLON shift to state 43
-- On AND shift to state 56
-- On SEMIC reduce production exp -> NEW STRING EQUAL exp IN exp 
-- On RPAREN reduce production exp -> NEW STRING EQUAL exp IN exp 
-- On RBRACE reduce production exp -> NEW STRING EQUAL exp IN exp 
-- On IN reduce production exp -> NEW STRING EQUAL exp IN exp 
-- On FULLSTOP reduce production exp -> NEW STRING EQUAL exp IN exp 
-- On EOF reduce production exp -> NEW STRING EQUAL exp IN exp 
-- On COMMA reduce production exp -> NEW STRING EQUAL exp IN exp 

State 76:
exp -> exp . LPAREN loption(separated_nonempty_list(COMMA,exp)) RPAREN [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . TIMES exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . DIV exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . PLUS exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . MINUS exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . LEQ exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . GEQ exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . EQUAL exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . EXCLAMATION EQUAL exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . SEMIC exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . AND exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . OR exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . COLON EQUAL exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> NOT exp . [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
-- On TIMES shift to state 30
-- On PLUS shift to state 39
-- On MINUS shift to state 46
-- On LPAREN shift to state 32
-- On LEQ shift to state 48
-- On GEQ shift to state 50
-- On EXCLAMATION shift to state 27
-- On EQUAL shift to state 54
-- On DIV shift to state 41
-- On COLON shift to state 43
-- On SEMIC reduce production exp -> NOT exp 
-- On RPAREN reduce production exp -> NOT exp 
-- On RBRACE reduce production exp -> NOT exp 
-- On OR reduce production exp -> NOT exp 
-- On IN reduce production exp -> NOT exp 
-- On FULLSTOP reduce production exp -> NOT exp 
-- On EOF reduce production exp -> NOT exp 
-- On COMMA reduce production exp -> NOT exp 
-- On AND reduce production exp -> NOT exp 

State 77:
exp -> PRINTINT exp . [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . LPAREN loption(separated_nonempty_list(COMMA,exp)) RPAREN [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . TIMES exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . DIV exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . PLUS exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . MINUS exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . LEQ exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . GEQ exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . EQUAL exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . EXCLAMATION EQUAL exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . SEMIC exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . AND exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . OR exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
exp -> exp . COLON EQUAL exp [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
-- On TIMES shift to state 30
-- On PLUS shift to state 39
-- On OR shift to state 52
-- On MINUS shift to state 46
-- On LPAREN shift to state 32
-- On LEQ shift to state 48
-- On GEQ shift to state 50
-- On EXCLAMATION shift to state 27
-- On EQUAL shift to state 54
-- On DIV shift to state 41
-- On COLON shift to state 43
-- On AND shift to state 56
-- On SEMIC reduce production exp -> PRINTINT exp 
-- On RPAREN reduce production exp -> PRINTINT exp 
-- On RBRACE reduce production exp -> PRINTINT exp 
-- On IN reduce production exp -> PRINTINT exp 
-- On FULLSTOP reduce production exp -> PRINTINT exp 
-- On EOF reduce production exp -> PRINTINT exp 
-- On COMMA reduce production exp -> PRINTINT exp 

State 78:
exp -> exp . LPAREN loption(separated_nonempty_list(COMMA,exp)) RPAREN [ TIMES SEMIC RPAREN PLUS OR MINUS LPAREN LEQ GEQ EXCLAMATION EQUAL DIV COLON AND ]
exp -> exp . TIMES exp [ TIMES SEMIC RPAREN PLUS OR MINUS LPAREN LEQ GEQ EXCLAMATION EQUAL DIV COLON AND ]
exp -> exp . DIV exp [ TIMES SEMIC RPAREN PLUS OR MINUS LPAREN LEQ GEQ EXCLAMATION EQUAL DIV COLON AND ]
exp -> exp . PLUS exp [ TIMES SEMIC RPAREN PLUS OR MINUS LPAREN LEQ GEQ EXCLAMATION EQUAL DIV COLON AND ]
exp -> exp . MINUS exp [ TIMES SEMIC RPAREN PLUS OR MINUS LPAREN LEQ GEQ EXCLAMATION EQUAL DIV COLON AND ]
exp -> exp . LEQ exp [ TIMES SEMIC RPAREN PLUS OR MINUS LPAREN LEQ GEQ EXCLAMATION EQUAL DIV COLON AND ]
exp -> exp . GEQ exp [ TIMES SEMIC RPAREN PLUS OR MINUS LPAREN LEQ GEQ EXCLAMATION EQUAL DIV COLON AND ]
exp -> exp . EQUAL exp [ TIMES SEMIC RPAREN PLUS OR MINUS LPAREN LEQ GEQ EXCLAMATION EQUAL DIV COLON AND ]
exp -> exp . EXCLAMATION EQUAL exp [ TIMES SEMIC RPAREN PLUS OR MINUS LPAREN LEQ GEQ EXCLAMATION EQUAL DIV COLON AND ]
exp -> exp . SEMIC exp [ TIMES SEMIC RPAREN PLUS OR MINUS LPAREN LEQ GEQ EXCLAMATION EQUAL DIV COLON AND ]
exp -> exp . AND exp [ TIMES SEMIC RPAREN PLUS OR MINUS LPAREN LEQ GEQ EXCLAMATION EQUAL DIV COLON AND ]
exp -> exp . OR exp [ TIMES SEMIC RPAREN PLUS OR MINUS LPAREN LEQ GEQ EXCLAMATION EQUAL DIV COLON AND ]
exp -> exp . COLON EQUAL exp [ TIMES SEMIC RPAREN PLUS OR MINUS LPAREN LEQ GEQ EXCLAMATION EQUAL DIV COLON AND ]
exp -> WHILE LPAREN exp . RPAREN DO LBRACE exp RBRACE [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
-- On TIMES shift to state 30
-- On SEMIC shift to state 37
-- On RPAREN shift to state 79
-- On PLUS shift to state 39
-- On OR shift to state 52
-- On MINUS shift to state 46
-- On LPAREN shift to state 32
-- On LEQ shift to state 48
-- On GEQ shift to state 50
-- On EXCLAMATION shift to state 27
-- On EQUAL shift to state 54
-- On DIV shift to state 41
-- On COLON shift to state 43
-- On AND shift to state 56

State 79:
exp -> WHILE LPAREN exp RPAREN . DO LBRACE exp RBRACE [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
-- On DO shift to state 80

State 80:
exp -> WHILE LPAREN exp RPAREN DO . LBRACE exp RBRACE [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
-- On LBRACE shift to state 81

State 81:
exp -> WHILE LPAREN exp RPAREN DO LBRACE . exp RBRACE [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
-- On WHILE shift to state 10
-- On STRING shift to state 12
-- On READINT shift to state 13
-- On PRINTINT shift to state 14
-- On NOT shift to state 15
-- On NEW shift to state 16
-- On LET shift to state 19
-- On INT shift to state 22
-- On IF shift to state 23
-- On EXCLAMATION shift to state 25
-- On exp shift to state 82

State 82:
exp -> exp . LPAREN loption(separated_nonempty_list(COMMA,exp)) RPAREN [ TIMES SEMIC RBRACE PLUS OR MINUS LPAREN LEQ GEQ EXCLAMATION EQUAL DIV COLON AND ]
exp -> exp . TIMES exp [ TIMES SEMIC RBRACE PLUS OR MINUS LPAREN LEQ GEQ EXCLAMATION EQUAL DIV COLON AND ]
exp -> exp . DIV exp [ TIMES SEMIC RBRACE PLUS OR MINUS LPAREN LEQ GEQ EXCLAMATION EQUAL DIV COLON AND ]
exp -> exp . PLUS exp [ TIMES SEMIC RBRACE PLUS OR MINUS LPAREN LEQ GEQ EXCLAMATION EQUAL DIV COLON AND ]
exp -> exp . MINUS exp [ TIMES SEMIC RBRACE PLUS OR MINUS LPAREN LEQ GEQ EXCLAMATION EQUAL DIV COLON AND ]
exp -> exp . LEQ exp [ TIMES SEMIC RBRACE PLUS OR MINUS LPAREN LEQ GEQ EXCLAMATION EQUAL DIV COLON AND ]
exp -> exp . GEQ exp [ TIMES SEMIC RBRACE PLUS OR MINUS LPAREN LEQ GEQ EXCLAMATION EQUAL DIV COLON AND ]
exp -> exp . EQUAL exp [ TIMES SEMIC RBRACE PLUS OR MINUS LPAREN LEQ GEQ EXCLAMATION EQUAL DIV COLON AND ]
exp -> exp . EXCLAMATION EQUAL exp [ TIMES SEMIC RBRACE PLUS OR MINUS LPAREN LEQ GEQ EXCLAMATION EQUAL DIV COLON AND ]
exp -> exp . SEMIC exp [ TIMES SEMIC RBRACE PLUS OR MINUS LPAREN LEQ GEQ EXCLAMATION EQUAL DIV COLON AND ]
exp -> exp . AND exp [ TIMES SEMIC RBRACE PLUS OR MINUS LPAREN LEQ GEQ EXCLAMATION EQUAL DIV COLON AND ]
exp -> exp . OR exp [ TIMES SEMIC RBRACE PLUS OR MINUS LPAREN LEQ GEQ EXCLAMATION EQUAL DIV COLON AND ]
exp -> exp . COLON EQUAL exp [ TIMES SEMIC RBRACE PLUS OR MINUS LPAREN LEQ GEQ EXCLAMATION EQUAL DIV COLON AND ]
exp -> WHILE LPAREN exp RPAREN DO LBRACE exp . RBRACE [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
-- On TIMES shift to state 30
-- On SEMIC shift to state 37
-- On RBRACE shift to state 83
-- On PLUS shift to state 39
-- On OR shift to state 52
-- On MINUS shift to state 46
-- On LPAREN shift to state 32
-- On LEQ shift to state 48
-- On GEQ shift to state 50
-- On EXCLAMATION shift to state 27
-- On EQUAL shift to state 54
-- On DIV shift to state 41
-- On COLON shift to state 43
-- On AND shift to state 56

State 83:
exp -> WHILE LPAREN exp RPAREN DO LBRACE exp RBRACE . [ TIMES SEMIC RPAREN RBRACE PLUS OR MINUS LPAREN LEQ IN GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COMMA COLON AND ]
-- On TIMES reduce production exp -> WHILE LPAREN exp RPAREN DO LBRACE exp RBRACE 
-- On SEMIC reduce production exp -> WHILE LPAREN exp RPAREN DO LBRACE exp RBRACE 
-- On RPAREN reduce production exp -> WHILE LPAREN exp RPAREN DO LBRACE exp RBRACE 
-- On RBRACE reduce production exp -> WHILE LPAREN exp RPAREN DO LBRACE exp RBRACE 
-- On PLUS reduce production exp -> WHILE LPAREN exp RPAREN DO LBRACE exp RBRACE 
-- On OR reduce production exp -> WHILE LPAREN exp RPAREN DO LBRACE exp RBRACE 
-- On MINUS reduce production exp -> WHILE LPAREN exp RPAREN DO LBRACE exp RBRACE 
-- On LPAREN reduce production exp -> WHILE LPAREN exp RPAREN DO LBRACE exp RBRACE 
-- On LEQ reduce production exp -> WHILE LPAREN exp RPAREN DO LBRACE exp RBRACE 
-- On IN reduce production exp -> WHILE LPAREN exp RPAREN DO LBRACE exp RBRACE 
-- On GEQ reduce production exp -> WHILE LPAREN exp RPAREN DO LBRACE exp RBRACE 
-- On FULLSTOP reduce production exp -> WHILE LPAREN exp RPAREN DO LBRACE exp RBRACE 
-- On EXCLAMATION reduce production exp -> WHILE LPAREN exp RPAREN DO LBRACE exp RBRACE 
-- On EQUAL reduce production exp -> WHILE LPAREN exp RPAREN DO LBRACE exp RBRACE 
-- On EOF reduce production exp -> WHILE LPAREN exp RPAREN DO LBRACE exp RBRACE 
-- On DIV reduce production exp -> WHILE LPAREN exp RPAREN DO LBRACE exp RBRACE 
-- On COMMA reduce production exp -> WHILE LPAREN exp RPAREN DO LBRACE exp RBRACE 
-- On COLON reduce production exp -> WHILE LPAREN exp RPAREN DO LBRACE exp RBRACE 
-- On AND reduce production exp -> WHILE LPAREN exp RPAREN DO LBRACE exp RBRACE 

State 84:
exp -> exp . LPAREN loption(separated_nonempty_list(COMMA,exp)) RPAREN [ TIMES SEMIC PLUS OR MINUS LPAREN LEQ GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COLON AND ]
exp -> exp . TIMES exp [ TIMES SEMIC PLUS OR MINUS LPAREN LEQ GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COLON AND ]
exp -> exp . DIV exp [ TIMES SEMIC PLUS OR MINUS LPAREN LEQ GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COLON AND ]
exp -> exp . PLUS exp [ TIMES SEMIC PLUS OR MINUS LPAREN LEQ GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COLON AND ]
exp -> exp . MINUS exp [ TIMES SEMIC PLUS OR MINUS LPAREN LEQ GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COLON AND ]
exp -> exp . LEQ exp [ TIMES SEMIC PLUS OR MINUS LPAREN LEQ GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COLON AND ]
exp -> exp . GEQ exp [ TIMES SEMIC PLUS OR MINUS LPAREN LEQ GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COLON AND ]
exp -> exp . EQUAL exp [ TIMES SEMIC PLUS OR MINUS LPAREN LEQ GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COLON AND ]
exp -> exp . EXCLAMATION EQUAL exp [ TIMES SEMIC PLUS OR MINUS LPAREN LEQ GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COLON AND ]
exp -> exp . SEMIC exp [ TIMES SEMIC PLUS OR MINUS LPAREN LEQ GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COLON AND ]
exp -> exp . AND exp [ TIMES SEMIC PLUS OR MINUS LPAREN LEQ GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COLON AND ]
exp -> exp . OR exp [ TIMES SEMIC PLUS OR MINUS LPAREN LEQ GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COLON AND ]
exp -> exp . COLON EQUAL exp [ TIMES SEMIC PLUS OR MINUS LPAREN LEQ GEQ FULLSTOP EXCLAMATION EQUAL EOF DIV COLON AND ]
fundef -> STRING LPAREN loption(separated_nonempty_list(COMMA,STRING)) RPAREN DEF exp . [ FULLSTOP EOF ]
-- On TIMES shift to state 30
-- On SEMIC shift to state 37
-- On PLUS shift to state 39
-- On OR shift to state 52
-- On MINUS shift to state 46
-- On LPAREN shift to state 32
-- On LEQ shift to state 48
-- On GEQ shift to state 50
-- On EXCLAMATION shift to state 27
-- On EQUAL shift to state 54
-- On DIV shift to state 41
-- On COLON shift to state 43
-- On AND shift to state 56
-- On FULLSTOP reduce production fundef -> STRING LPAREN loption(separated_nonempty_list(COMMA,STRING)) RPAREN DEF exp 
-- On EOF reduce production fundef -> STRING LPAREN loption(separated_nonempty_list(COMMA,STRING)) RPAREN DEF exp 

State 85:
top' -> top . [ # ]
-- On # accept top

State 86:
loption(separated_nonempty_list(FULLSTOP,fundef)) -> separated_nonempty_list(FULLSTOP,fundef) . [ EOF ]
-- On EOF reduce production loption(separated_nonempty_list(FULLSTOP,fundef)) -> separated_nonempty_list(FULLSTOP,fundef) 

State 87:
top -> loption(separated_nonempty_list(FULLSTOP,fundef)) . EOF [ # ]
-- On EOF shift to state 88

State 88:
top -> loption(separated_nonempty_list(FULLSTOP,fundef)) EOF . [ # ]
-- On # reduce production top -> loption(separated_nonempty_list(FULLSTOP,fundef)) EOF 

State 89:
separated_nonempty_list(FULLSTOP,fundef) -> fundef . [ EOF ]
separated_nonempty_list(FULLSTOP,fundef) -> fundef . FULLSTOP separated_nonempty_list(FULLSTOP,fundef) [ EOF ]
-- On FULLSTOP shift to state 90
-- On EOF reduce production separated_nonempty_list(FULLSTOP,fundef) -> fundef 

State 90:
separated_nonempty_list(FULLSTOP,fundef) -> fundef FULLSTOP . separated_nonempty_list(FULLSTOP,fundef) [ EOF ]
-- On STRING shift to state 1
-- On separated_nonempty_list(FULLSTOP,fundef) shift to state 91
-- On fundef shift to state 89

State 91:
separated_nonempty_list(FULLSTOP,fundef) -> fundef FULLSTOP separated_nonempty_list(FULLSTOP,fundef) . [ EOF ]
-- On EOF reduce production separated_nonempty_list(FULLSTOP,fundef) -> fundef FULLSTOP separated_nonempty_list(FULLSTOP,fundef) 

