
** Conflict (shift/reduce/reduce) in state 65.
** Token involved: SEMIC
** This state is reached from top after reading:

STRING LPAREN loption(separated_nonempty_list(COMMA,STRING)) RPAREN COLON NEW STRING ASSIGN exp SEMIC exp 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

top 
loption(separated_nonempty_list(FULLSTOP,fundef)) EOF 
separated_nonempty_list(FULLSTOP,fundef) 
fundef 
STRING LPAREN loption(separated_nonempty_list(COMMA,STRING)) RPAREN COLON exp 
                                                                          (?)

** In state 65, looking ahead at SEMIC, shifting is permitted
** because of the following sub-derivation:

NEW STRING ASSIGN exp SEMIC exp 
                            exp . SEMIC exp 

** In state 65, looking ahead at SEMIC, reducing production
** exp -> exp SEMIC exp 
** is permitted because of the following sub-derivation:

NEW STRING ASSIGN exp SEMIC exp // lookahead token appears
                  exp SEMIC exp . 

** In state 65, looking ahead at SEMIC, reducing production
** exp -> NEW STRING ASSIGN exp SEMIC exp 
** is permitted because of the following sub-derivation:

exp SEMIC exp // lookahead token appears
NEW STRING ASSIGN exp SEMIC exp . 

** Conflict (shift/reduce/reduce) in state 62.
** Token involved: SEMIC
** This state is reached from top after reading:

STRING LPAREN loption(separated_nonempty_list(COMMA,STRING)) RPAREN COLON LET STRING ASSIGN exp SEMIC exp 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

top 
loption(separated_nonempty_list(FULLSTOP,fundef)) EOF 
separated_nonempty_list(FULLSTOP,fundef) 
fundef 
STRING LPAREN loption(separated_nonempty_list(COMMA,STRING)) RPAREN COLON exp 
                                                                          (?)

** In state 62, looking ahead at SEMIC, shifting is permitted
** because of the following sub-derivation:

LET STRING ASSIGN exp SEMIC exp 
                            exp . SEMIC exp 

** In state 62, looking ahead at SEMIC, reducing production
** exp -> exp SEMIC exp 
** is permitted because of the following sub-derivation:

LET STRING ASSIGN exp SEMIC exp // lookahead token appears
                  exp SEMIC exp . 

** In state 62, looking ahead at SEMIC, reducing production
** exp -> LET STRING ASSIGN exp SEMIC exp 
** is permitted because of the following sub-derivation:

exp SEMIC exp // lookahead token appears
LET STRING ASSIGN exp SEMIC exp . 
